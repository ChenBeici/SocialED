Search.setIndex({"docnames": ["SocialED.dataprocess", "SocialED.dataset", "SocialED.detector", "SocialED.metrics", "SocialED.utils", "cite", "index", "install", "reference", "sg_execution_times", "team", "tutorials/example", "tutorials/index", "tutorials/sg_execution_times"], "filenames": ["SocialED.dataprocess.rst", "SocialED.dataset.rst", "SocialED.detector.rst", "SocialED.metrics.rst", "SocialED.utils.rst", "cite.rst", "index.rst", "install.rst", "reference.rst", "sg_execution_times.rst", "team.rst", "tutorials\\example.rst", "tutorials\\index.rst", "tutorials\\sg_execution_times.rst"], "titles": ["SocialED.dataprocess", "SocialED.dataset", "SocialED.detector", "SocialED.metrics", "SocialED.utils", "Cite", "SocialED", "Installation", "References", "Computation times", "Core Team", "Section 1: Data Preparation", "A Blitz Introduction", "Computation times"], "terms": {"class": [0, 1, 2, 4], "arabictwitt": [], "dir_path": [1, 2], "none": [0, 1, 2, 4], "sourc": [0, 1, 2, 3, 4, 6, 11], "base": [1, 2, 8], "datasetload": 1, "load_data": [0, 1, 2, 6], "temporari": 1, "implement": [1, 2], "return": [0, 1, 2, 3, 4], "empti": 1, "crisislext26": 1, "crisismmd": [1, 8], "crisisnlp": 1, "object": [1, 2, 6], "download": [0, 1, 11], "download_and_cleanup": 1, "repo_url": 1, "dataset_nam": [1, 2], "local_target_fold": 1, "get_dataset_languag": [1, 2], "determin": [1, 2], "languag": [1, 2, 4, 6, 8], "current": [1, 2, 4], "The": [0, 1, 2, 4, 6], "english": [1, 2, 4], "french": [1, 2, 4], "arab": [1, 2, 4, 8], "type": [0, 1, 2, 3, 4], "str": [0, 1, 2, 4], "get_dataset_nam": 1, "get": [1, 2, 4, 6], "name": [0, 1, 2, 4], "event2012": [1, 2], "event2018": [1, 2], "humaid": [1, 8], "kbp": 1, "maven": [1, 6, 8], "dataset": [0, 2, 6, 8, 11], "label": [0, 2, 3, 4], "metadata": [], "arabic_twitt": [1, 6], "text": [2, 4], "num_top": 2, "50": 2, "pass": 2, "20": [2, 8], "iter": 2, "alpha": [2, 4], "symmetr": 2, "eta": 2, "random_st": 2, "1": [2, 7, 8, 9, 13], "eval_everi": 2, "10": [2, 7, 8, 11], "chunksiz": 2, "2000": 2, "file_path": 2, "model": [2, 4, 6, 8], "model_sav": 2, "create_corpu": 2, "df": [0, 2], "text_column": 2, "creat": [0, 2, 7, 11], "corpu": [2, 8], "dictionari": [0, 2, 4], "requir": [2, 7], "detect": [2, 3, 4, 5, 6, 8], "assign": 2, "topic": [2, 6], "each": [0, 2, 4, 6], "document": [2, 6, 8], "save": [0, 2], "uniqu": 2, "ground": [0, 2, 3], "truth": [0, 2, 3], "predict": [0, 2, 3, 6], "csv": 2, "file": [0, 2, 7, 9, 13], "display_top": 2, "num_word": 2, "displai": 2, "gener": [2, 8, 11, 12], "evalu": [2, 3, 6, 8], "ground_truth": [0, 2, 3], "fit": [2, 6], "load_model": 2, "load": [0, 2, 6], "from": [0, 2, 6, 7, 8, 9, 10, 13], "preprocess": [2, 6], "data": [0, 2, 6, 8, 12], "token": [2, 4, 6], "stop": 2, "word": [0, 2, 4, 6, 8], "remov": 2, "etc": 2, "lr": 2, "0": [2, 4, 7, 9, 11, 13], "001": 2, "batch_siz": 2, "1000": 2, "dropout_keep_prob": 2, "8": [2, 6, 7, 8], "embedding_s": 2, "300": 2, "max_siz": 2, "5000": 2, "seed": 2, "num_hidden_nod": 2, "32": [2, 8], "hidden_dim2": 2, "64": 2, "num_lay": 2, "bi_direct": 2, "true": [2, 4], "pad_index": 2, "num_epoch": 2, "margin": 2, "3": [2, 7, 8, 11], "max_len": 2, "event": [2, 3, 4, 5, 6, 8], "us": [2, 4, 5, 6, 7, 8, 11, 12], "best": 2, "train": [2, 6, 8], "test": [2, 6], "load_embed": 2, "pre": [2, 6, 8], "embed": [0, 2, 4, 6, 8], "run_train": 2, "epoch": 2, "train_iter": 2, "test_iter": 2, "optim": 2, "loss_func": 2, "run": [2, 7, 11], "process": [0, 2, 6, 8], "split": 2, "valid": [2, 4], "set": [2, 4, 7, 8], "log_interv": 2, "40": [2, 8], "functionnegativetripletselector": 2, "negative_selection_fn": 2, "cpu": [2, 4, 6], "tripletselector": 2, "For": [2, 6], "posit": 2, "pair": 2, "take": 2, "hardest": 2, "neg": 2, "sampl": 2, "greatest": 2, "triplet": 2, "loss": 2, "valu": [2, 4], "should": 2, "match": 2, "arrai": [0, 2, 3], "loss_valu": 2, "given": [2, 4], "anchor": 2, "all": [2, 4, 6, 9], "index": [2, 3], "get_triplet": 2, "hardestnegativetripletselector": 2, "fals": 2, "lstm": [2, 8], "arg": [2, 6], "ani": 2, "kwarg": 2, "forward": 2, "text_length": 2, "init_hidden": 2, "onlinetripletloss": 2, "onlin": [2, 6], "batch": 2, "correspond": 2, "ar": [0, 2, 5], "triplet_selector": 2, "target": 2, "indic": 2, "randomnegativetripletselector": 2, "np": 2, "shape": 2, "n_triplet": 2, "x": [2, 5, 8, 11], "vectorizedata": 2, "pad_data": 2, "tweet": [0, 2, 8], "hardest_neg": 2, "pdist": 2, "vector": [2, 4, 8], "random_hard_neg": 2, "vector_s": 2, "100": 2, "window": 2, "5": [2, 6, 7, 8], "min_count": 2, "sg": 2, "word2vec_model": 2, "repres": [2, 6], "averag": [0, 2], "its": [2, 6, 7], "document_vector": 2, "num_clust": 2, "model_need": 2, "6b": 2, "100d": 2, "txt": [2, 7], "create_vector": 2, "cluster": [2, 3, 8], "load_glove_vector": 2, "kmean": 2, "text_to_glove_vector": 2, "embedding_dim": 2, "convert": [0, 2, 4], "represent": [2, 4, 8], "calcul": [0, 2], "distanc": [2, 8], "between": [0, 2, 4], "messag": [2, 4, 8], "model_nam": 2, "paraphras": 2, "minilm": 2, "l6": 2, "v2": 2, "train_df": 2, "test_df": 2, "compar": 2, "get_sbert_embed": 2, "mask_path": 2, "split_indic": [], "test_indices_2048": [], "npy": [0, 2], "num_repeat": 2, "min_cooccur_tim": 2, "2": [2, 7, 8, 11], "min_prob": 2, "15": [2, 8, 11], "max_kw_num": 2, "classify_doc": 2, "test_tweet": 2, "m_commun": 2, "map_kw_to_index": 2, "construct_dict": 2, "construct_kw_graph": 2, "kw_pair_dict": 2, "kw_dict": 2, "detect_kw_communities_it": 2, "g": [0, 2, 4], "commun": [2, 8], "map_commun": 2, "map_dict": 2, "map_tweet": 2, "check_class_s": 0, "detect_kw_commun": 2, "accumulatedaccuracymetr": 2, "metric": [2, 6], "work": [2, 8], "classif": [2, 3, 8], "reset": 2, "arabic_preprocessor": 2, "cfg": 2, "clean_text": 2, "averagenonzerotripletsmetr": 2, "count": 2, "number": [0, 2], "nonzero": 2, "found": 2, "minibatch": 2, "predictions2": [], "ground_truths2": [], "evaluate2": [], "gat": 2, "block": 2, "tran": 2, "src": 2, "tgt": 2, "gatlay": 2, "edge_attent": 2, "edg": [0, 2], "layer_id": 2, "message_func": 2, "reduce_func": 2, "node": [0, 2], "reset_paramet": 2, "reiniti": 2, "learnabl": 2, "paramet": [0, 2, 3, 4], "multiheadgatlay": 2, "rd": 2, "peer_embed": 2, "preprocessor": 2, "construct_graph": [0, 2, 6], "construct_graph_from_df": 2, "construct_incremental_dataset": 2, "save_path": [0, 2, 4], "featur": [0, 2], "nfeatur": 2, "df_to_t_featur": [0, 2], "documents_to_featur": 2, "initial_lang": 2, "extract_time_featur": [0, 2], "t_str": [0, 2], "generate_initial_featur": 2, "get_word2id_emb": [0, 2], "wordpath": [0, 2], "embpath": [0, 2], "getlinear_transform_featur": 2, "networkx_to_dgl_graph": 2, "nonlinear_transform_featur": 2, "socialdataset": 2, "load_adj_matrix": 2, "path": [0, 2], "remove_obsolete_nod": 2, "indices_to_remov": 2, "args_defin": 6, "evaluate_model": 2, "extract_featur": 2, "extract_label": 2, "num_isolated_nod": [0, 2], "is_valid": 2, "file_nam": 2, "extract_embed": 2, "num_all_sampl": 2, "devic": [2, 4], "generatemask": 2, "length": [2, 4], "data_split": 2, "train_i": 2, "i": [2, 4, 6, 7, 8, 10], "validation_perc": 2, "test_perc": 2, "getdata": 2, "embedding_save_path": 2, "data_path": 2, "graph_statist": [0, 2, 4], "infer": 2, "loss_fn": 2, "initial_maintain": 2, "intersect": 2, "lst1": 2, "lst2": 2, "mutual_extract_embed": 2, "peer": 2, "mutual_inf": 2, "embedding_save_path1": 2, "embedding_save_path2": 2, "data_split1": 2, "data_split2": 2, "model1": 2, "model2": 2, "mutual_train": 2, "run_kmean": 2, "isopath": 2, "save_embed": 2, "extract_nid": 2, "extract_train_tag": 2, "counter": 2, "avgreadout": 2, "seq": 2, "dgi": 2, "emb": [2, 4], "nf": 2, "discrimin": 2, "c": 2, "h_pl": 2, "h_mi": 2, "s_bias1": 2, "s_bias2": 2, "weights_init": 2, "m": [2, 8], "kpgnn_model": 2, "train_indic": 2, "loss_fn_dgi": 2, "custom_message_graph": 2, "num_indices_to_remov": 2, "intro": 2, "thi": [2, 11, 12], "function": [0, 2, 4], "initi": [2, 6], "mainten": 2, "If": [0, 2, 4, 5], "remove_obsolet": 2, "mode": 2, "first": [2, 4], "explicit": 2, "randomli": 2, "th": 2, "note": [2, 7], "other": [2, 8], "also": 2, "graph": [0, 2, 6, 8], "without": 2, "onli": 2, "structur": [2, 8], "info": [1, 2], "leverag": 2, "list": [0, 1, 2, 4], "splite": 2, "py": [2, 7, 9, 11, 12, 13], "flag": 2, "stage": 2, "percent": 2, "occupi": 2, "whole": 2, "ought": 2, "ednn": 2, "in_dim": [], "hidden_dim": 2, "out_dim": 2, "use_dropout": [], "defin": [], "comput": [2, 4, 8], "perform": 8, "everi": [], "call": [], "overridden": [], "subclass": [], "although": [], "recip": [], "need": [6, 7], "within": [4, 6], "one": 2, "instanc": 2, "afterward": [], "instead": [], "sinc": [], "former": [], "care": [], "regist": [], "hook": [], "while": [], "latter": [], "silent": [], "ignor": [], "them": [0, 2, 7], "bool": [2, 4], "num_head": 2, "use_residu": 2, "merg": 2, "cat": [], "continue_train": 2, "label_center_emb": 2, "edl_digamma_loss": 2, "epoch_num": 2, "num_class": 2, "annealing_step": 2, "edl_log_loss": 2, "edl_loss": 2, "func": 2, "y": [2, 8, 11], "edl_mse_loss": 2, "exp_evid": 2, "initial_train": 2, "kl_diverg": 2, "loglikelihood_loss": 2, "mse_loss": 2, "pairwise_sampl": [2, 4], "print_scor": 2, "score": [2, 3], "relu_evid": 2, "simnn": 2, "softplus_evid": 2, "actorcrit": 2, "state_dim": 2, "action_dim": 2, "actor_lay": [], "critic_lay": [], "encod": 2, "encoder_lay": [], "feature_dim": [], "continu": [2, 6], "std_init": [], "6": [2, 7, 8], "act": 2, "state": [2, 8], "evaluate_ac": 2, "action": [2, 6], "basebuff": 2, "add": [0, 2], "transit": 2, "buffer": 2, "clear": [2, 6], "get_data_buff": 2, "get_len": 2, "size": [0, 2], "cnnencod": 2, "layer_dim": [], "get_dim": 2, "dqn": 2, "input_typ": 2, "add_buff": 2, "epsilon_decai": 2, "learn": [2, 6, 7, 8], "step": [2, 6], "save_model": 2, "model_path": 2, "select_act": 2, "epsilon": 2, "update_network": 2, "dqn_config": 2, "input_s": 2, "drl_cluster": 2, "all_embed": 2, "block_num": 2, "pred_label": 2, "ema": 2, "beta": 2, "update_averag": 2, "old": 2, "new": [0, 2, 6, 8], "layer_config": [], "edge_index": 2, "graphlevel": 2, "reset_moving_averag": 2, "update_moving_averag": 2, "graph_modeltrain": 2, "embedd": 2, "get_embed": 2, "mlpencod": 2, "int": [0, 2, 4], "nmi_clust": 2, "nodelevel": 2, "node_modeltrain": 2, "ppo": 2, "ppo_config": 2, "qnet": 2, "q_layer": [], "singlepass": 2, "sim_threshold": 2, "agent": 2, "para": 2, "sim_init": 2, "sim": [2, 4], "global_step": 2, "sen_vec": 2, "clustering_init": 2, "t": [2, 8], "get_cent": 2, "get_info_clust": 2, "text_vec": 2, "indexs_per_clust": 2, "get_reward": 2, "get_stat": 2, "run_clust": 2, "run_cluster_init": 2, "run_cluster_sim": 2, "aug_edg": 2, "adj": 2, "calculate_nature_cnn_out_dim": 2, "height": 2, "weight": 2, "config2str": 2, "currenttim": [2, 4], "enumerateconfig": 2, "evaluate_fun": 2, "result_path": 2, "task": [2, 4, 6], "m_num": 2, "get_graph_dataset": 2, "message_numb": 2, "get_node_dataset": 2, "get_data": 2, "message_num": 2, "start": [2, 11], "tweet_sum": 2, "get_edge_index": 2, "get_loss": 2, "h1": 2, "h2": 2, "get_task": 2, "init_weight": 2, "make_batch": 2, "old_log_prob": 2, "advantag": 2, "old_valu": 2, "learn_siz": 2, "use_cuda": 2, "make_transit": 2, "item": 2, "normalize_adj": 2, "printconfig": 2, "random_clust": 2, "save_data": 2, "semi_clust": 2, "semi_loss": 2, "z1": [2, 4], "z2": [2, 4], "set_requires_grad": 2, "val": 2, "ema_updat": 2, "ma_model": 2, "current_model": 2, "ds_combin": [2, 4], "dirichlet": [2, 4, 8], "distribut": [2, 4], "combin": [2, 4], "euc_loss": 2, "u": 2, "true_label": 2, "e": [2, 4], "gnn": [2, 6, 8], "calculate_attent": 2, "construct_graph_base_el": 2, "view_dict": 2, "lang": 2, "get_nlp": 2, "str2list": 2, "str_ele": 2, "tem_agg_lay": 2, "uclsed_model": 2, "gnn_in_dim": [], "gnn_h_dim": 2, "gnn_out_dim": 2, "e_h_dim": 2, "e_out_dim": [], "view": 2, "blocks_dict": 2, "is_ednn_input": 2, "emb_v": 2, "ava_split_data": 2, "common_loss": 2, "emb1": 2, "emb2": 2, "extract_result": 2, "g_dict": 2, "get_dgl_data": 2, "kl_pred_diverg": 2, "make_onehot": 2, "input": [0, 2, 4], "split_data": 2, "train_p": 2, "val_p": 2, "test_p": 2, "train_model": 2, "time": [0, 2, 4, 8, 11], "criterion": 2, "outlier": [6, 8], "eval_acc": 3, "accuraci": 3, "like": [0, 2, 3], "acc": 3, "float": [2, 3, 4], "eval_ami": 3, "adjust": [3, 6], "mutual": [2, 3], "inform": [3, 8], "ami": [2, 3], "eval_ari": 3, "rand": 3, "ari": 3, "eval_f1": 3, "f1": 3, "eval_nmi": 3, "normal": [0, 2, 3, 7], "nmi": [2, 3], "A": [2, 4, 5, 6, 8], "support": [4, 8], "check_paramet": 4, "param": [2, 4], "low": [], "2147483648": [], "high": [6, 8], "2147483647": [], "param_nam": 4, "include_left": 4, "include_right": 4, "check": [0, 4], "an": [2, 8], "rang": [4, 6], "lower": 4, "bound": 4, "higher": [], "option": [0, 2, 4, 7], "default": [0, 2, 4], "whether": [2, 4], "includ": [4, 6, 7, 10], "within_rang": [], "rais": [2, 4], "error": 4, "construct": [0, 2, 6], "datafram": [0, 2], "contain": [0, 2], "media": [0, 2, 6, 8], "panda": [0, 2], "column": 0, "tweet_id": [0, 2], "user_ment": [0, 2], "user_id": [0, 2], "entiti": [0, 2], "sampled_word": 0, "networkx": [0, 2, 7], "exist": 0, "user": [0, 2, 6], "cache_dir": 0, "socialed_dataset": 0, "repositori": 0, "directori": [0, 2], "cach": 0, "numpi": [0, 2, 7], "ndarrai": [0, 2], "exampl": [6, 9, 11, 12, 13], "import": [6, 11], "logger": [], "verbos": 2, "deep": [2, 6, 8], "detector": 6, "torch": [2, 4, 7], "tensor": [2, 4], "larger": 0, "print": 4, "out": [], "more": 6, "log": 2, "pprint": 4, "offset": 4, "printer": 4, "built": [4, 6], "repr": 4, "pretti": 4, "dict": [2, 4], "begin": 4, "line": [4, 6, 11, 12], "callabl": 4, "entri": 4, "string": [0, 2, 4], "typic": [], "builtin": [], "tokenize_text": [4, 6], "max_length": 4, "512": 4, "maximum": [2, 4], "sequenc": [2, 4], "subword": 4, "validate_devic": 4, "gpu_id": 4, "gpu": [2, 4, 6], "id": [0, 2, 4], "environ": [4, 6, 7], "present": 4, "cuda": [2, 4], "our": [5, 10], "softwar": [5, 6, 8], "paper": [2, 5], "publicli": 5, "avail": [2, 5], "you": [5, 7], "social": [5, 7, 8, 10, 11, 12], "scientif": 5, "public": [5, 6, 8], "we": [5, 11], "would": 5, "appreci": 5, "citat": 5, "follow": [5, 6], "articl": 5, "zhang2024soci": 5, "titl": [5, 11], "python": [5, 6, 7, 8, 11], "librari": [5, 7, 8], "author": 5, "zhang": [5, 8, 10], "kun": [5, 10], "yu": [5, 8, 10], "xiaoyan": [5, 8, 10], "li": [5, 8, 10], "pu": [5, 8, 10], "peng": [5, 8, 10], "hao": [5, 8, 10], "philip": [5, 8, 10], "": [2, 5, 8, 10], "journal": [5, 8], "arxiv": [5, 8], "preprint": [5, 8], "2412": 5, "13472": 5, "year": [5, 6], "2024": [5, 6, 8], "k": [2, 5], "p": 5, "h": 5, "field": [2, 6], "pivot": 6, "area": 6, "research": [6, 8, 10], "broader": 6, "domain": [6, 8], "artifici": [6, 8], "intellig": [6, 8], "natur": [6, 8], "Its": 6, "autom": 6, "identif": 6, "analysi": [6, 8], "platform": 6, "twitter": [6, 8], "facebook": 6, "Such": 6, "encompass": 6, "wide": 6, "occurr": [2, 6], "disast": [6, 8], "viral": 6, "phenomena": 6, "comprehens": 6, "open": [2, 6, 8], "sed": 6, "integr": [2, 6], "19": [6, 8], "14": [6, 8], "divers": 6, "It": [6, 7], "provid": [2, 6], "unifi": 6, "api": [6, 8], "detail": [2, 6], "offer": 6, "practition": 6, "complet": 6, "solut": 6, "mind": 6, "enabl": 6, "adapt": [2, 6, 8], "extend": 6, "compon": 6, "variou": 6, "usag": 6, "easili": 6, "techniqu": 6, "standard": 6, "interfac": 6, "make": [6, 7], "With": 6, "popular": 6, "framework": 6, "ensur": 6, "effici": [6, 8], "scalabl": [6, 8], "across": [6, 8], "adher": 6, "code": [2, 6, 11], "unit": 6, "coverag": 6, "maintain": 6, "collect": [6, 8], "updat": [2, 6, 7], "emerg": 6, "method": [2, 6, 8], "consist": 6, "allow": 6, "seamless": 6, "prepar": 6, "customiz": 6, "specif": 6, "rich": 6, "tool": 6, "simplifi": 6, "workflow": 6, "develop": 6, "top": 6, "dgl": [6, 7], "pytorch": [6, 7, 8], "pyod": [6, 8], "pygod": [6, 8], "see": [2, 6], "below": 6, "7": [2, 6, 8], "plai": 6, "crucial": 6, "role": 6, "downstream": 6, "applic": 6, "crisi": [6, 8], "manag": [6, 8], "opinion": [6, 8], "monitor": [2, 6, 8], "fake": [6, 8], "And": 6, "kpgnn": 6, "argument": 6, "tru": 6, "result": [2, 6], "backbon": 6, "scenario": 6, "supervis": [6, 8], "ref": 6, "lda": 6, "2003": [6, 8], "offlin": [2, 6], "unsupervis": [6, 8], "bilstm": 6, "2005": [6, 8], "word2vec": 6, "2013": [6, 8], "glove": [6, 8], "2014": [6, 8], "wmd": 6, "2015": [6, 8], "similar": [2, 4, 6], "bert": [4, 6, 8], "2018": [6, 8], "plm": [2, 6], "sbert": 6, "2019": [6, 8], "eventx": 6, "2020": [6, 8], "clkd": 6, "2021": [6, 8], "finev": 6, "2022": [6, 8], "qsgnn": 6, "etgnn": 6, "2023": [6, 8], "hcrc": 6, "ucls": 6, "rplmsed": 6, "hisev": 6, "adpsemev": 6, "hypers": 6, "2025": [6, 8], "improv": [6, 8], "reusabl": 6, "reduc": 6, "redund": 6, "organ": 6, "distinct": 6, "modul": [2, 6], "sever": 6, "through": [2, 6, 8], "github": [6, 7], "version": [6, 7], "oper": 6, "system": [6, 8], "99": 6, "pypi": 6, "compat": 6, "pep": 6, "625": 6, "compliant": 6, "style": [6, 8], "guid": [6, 8], "read": 6, "doc": [2, 6], "tutori": [6, 13], "intuit": 6, "inspir": 6, "scikit": [6, 7, 8], "project": [6, 8], "host": 6, "easi": 6, "issu": 6, "report": 6, "mechan": [6, 8], "contribut": 6, "guidelin": 6, "recommend": 7, "pip": 7, "pleas": 7, "sure": 7, "latest": 7, "frequent": 7, "upgrad": 7, "altern": 7, "could": 7, "clone": 7, "setup": 7, "up": 7, "conda": 7, "n": [2, 7], "activ": [2, 7], "git": 7, "http": 7, "com": 7, "ringbdstack": 7, "cd": 7, "r": [2, 7], "depend": 7, "24": [7, 8], "scipi": 7, "pyg": 7, "torch_geometr": 7, "To": 7, "streamlin": 7, "doe": 7, "NOT": 7, "abov": 7, "link": 7, "ruitong": 8, "shaon": 8, "yuwei": 8, "cao": 8, "shirui": 8, "pan": 8, "reinforc": [2, 8], "increment": [2, 8], "cross": 8, "lingual": 8, "ieee": 8, "transact": 8, "pattern": 8, "machin": 8, "45": 8, "980": 8, "998": 8, "dionysio": 8, "karamouza": 8, "ioanni": 8, "mademli": 8, "pita": 8, "semant": [2, 8], "network": [2, 8], "mine": [2, 8], "12": 8, "91": 8, "112": 8, "yang": [8, 10], "liu": 8, "yi": 8, "fang": 8, "brook": 8, "wu": 8, "fned": 8, "earli": [2, 8], "acm": 8, "toi": 8, "38": 8, "33": 8, "4": [2, 8, 11], "mahdi": 8, "abavisani": 8, "liwei": 8, "shengli": 8, "hu": 8, "joel": 8, "tetreault": 8, "alejandro": 8, "jaim": 8, "multimod": 8, "categor": 8, "In": 8, "proceed": 8, "cvf": 8, "confer": 8, "vision": 8, "recognit": 8, "14679": 8, "14689": 8, "zhengtao": 8, "hierarch": [2, 8], "entropi": 8, "minim": [2, 8], "aaai": 8, "volum": [2, 8], "8255": 8, "8264": 8, "jia": 8, "yingtong": 8, "dou": 8, "jianxin": 8, "knowledg": [2, 8], "preserv": [2, 8], "via": 8, "heterogen": 8, "web": 8, "3383": 8, "3395": 8, "jiaqian": 8, "ren": 8, "lei": 8, "jiang": 8, "lifang": 8, "he": 8, "known": 8, "unknown": 8, "qualiti": 8, "awar": [2, 8], "self": [2, 8], "neural": [2, 8], "31st": 8, "intern": 8, "1696": 8, "1705": 8, "david": 8, "blei": 8, "andrew": 8, "ng": 8, "michael": 8, "jordan": 8, "latent": [2, 8], "alloc": [2, 8], "jan": 8, "993": 8, "1022": 8, "9": [2, 8], "alex": 8, "grave": 8, "j": 8, "\u00fc": 8, "rgen": 8, "schmidhub": 8, "framewis": 8, "phonem": 8, "bidirect": [2, 8], "architectur": 8, "18": 8, "602": 8, "610": 8, "toma": 8, "mikolov": 8, "kai": 8, "chen": 8, "greg": 8, "corrado": 8, "jeffrei": 8, "dean": 8, "estim": [2, 8], "space": 8, "11": 8, "jacob": 8, "devlin": 8, "ming": 8, "wei": 8, "chang": 8, "kenton": 8, "lee": 8, "kristina": 8, "toutanova": 8, "transform": [2, 8], "understand": 8, "north": 8, "american": 8, "chapter": 8, "associ": 8, "linguist": 8, "4171": 8, "4186": 8, "minneapoli": 8, "yue": 8, "zhao": 8, "zain": 8, "nasrullah": 8, "zheng": 8, "toolbox": 8, "96": 8, "13": [8, 11], "xuei": 8, "ding": 8, "xiyang": 8, "lichao": 8, "sun": 8, "25": 8, "141": 8, "pennington": 8, "richard": 8, "socher": 8, "christoph": 8, "d": 8, "man": 8, "global": 8, "empir": 8, "emnlp": 8, "1532": 8, "1543": 8, "matt": 8, "kusner": 8, "nichola": 8, "kolkin": 8, "kilian": 8, "weinberg": 8, "957": 8, "966": 8, "pmlr": 8, "16": [2, 8], "zhifeng": 8, "shengxiang": 8, "gao": 8, "qiang": 8, "toward": 8, "hybrid": 8, "distil": [2, 8], "discoveri": 8, "36": 8, "17": [8, 11], "zhiwei": 8, "uncertainti": [2, 8], "boundari": 8, "imbalanc": 8, "engin": 8, "page": 8, "yantuan": 8, "xian": 8, "linqin": 8, "wang": 8, "jingyun": 8, "relat": [2, 8], "prompt": [2, 8], "43": 8, "yuecen": 8, "haoran": 8, "qian": 8, "chunm": 8, "differenti": 8, "privat": 8, "33rd": 8, "2950": 8, "2960": 8, "nil": 8, "reimer": 8, "iryna": 8, "gurevych": 8, "sentenc": [2, 4, 8], "siames": 8, "9th": 8, "joint": 8, "ijcnlp": 8, "3982": 8, "3992": 8, "21": 8, "evidenti": 8, "tempor": [2, 8], "dempster": 8, "shafer": 8, "theori": 8, "servic": 8, "icw": 8, "331": 8, "336": 8, "22": 8, "yuanyuan": 8, "guo": 8, "zehua": 8, "zang": 8, "hang": 8, "xiao": 8, "xu": [8, 10], "rui": 8, "lixiang": 8, "jiangmeng": 8, "contrast": [2, 8], "284": 8, "111225": 8, "23": 8, "bang": 8, "fred": 8, "han": 8, "di": 8, "niu": 8, "linglong": 8, "kong": 8, "kunfeng": 8, "lai": 8, "stori": 8, "forest": 8, "extract": [0, 2, 8], "tell": 8, "break": [2, 8], "tkdd": 8, "28": 8, "yifan": 8, "shuaishuai": 8, "zhou": 8, "liehuang": 8, "zhu": 8, "effect": 8, "hyperbol": [2, 8], "dame": 8, "person": 8, "feder": 8, "dual": 8, "aggreg": [2, 8], "3052": 8, "3062": 8, "26": 8, "lar": 8, "buitinck": 8, "gill": 8, "loupp": 8, "mathieu": 8, "blondel": 8, "fabian": 8, "pedregosa": 8, "andrea": 8, "mueller": 8, "olivi": 8, "grisel": 8, "vlad": 8, "nicula": 8, "peter": 8, "prettenhof": 8, "alexandr": 8, "gramfort": 8, "jaqu": 8, "grobler": 8, "robert": 8, "layton": 8, "jake": 8, "vanderpla": 8, "arnaud": 8, "joli": 8, "brian": 8, "holt": 8, "ga": 8, "\u00eb": 8, "l": 8, "varoquaux": 8, "design": 8, "experi": 8, "ecml": 8, "pkdd": 8, "workshop": 8, "108": 8, "122": 8, "27": 8, "wolf": 8, "huggingfac": 8, "art": 8, "1910": 8, "03771": 8, "adam": [2, 8], "paszk": 8, "sam": 8, "gross": 8, "francisco": 8, "massa": 8, "lerer": 8, "jame": 8, "bradburi": 8, "gregori": 8, "chanan": 8, "trevor": 8, "killeen": 8, "zeme": 8, "lin": 8, "natalia": 8, "gimelshein": 8, "luca": 8, "antiga": 8, "imper": 8, "advanc": [2, 8], "29": 8, "mahmud": 8, "hasan": 8, "mehmet": 8, "orgun": 8, "rolf": 8, "schwitter": 8, "survei": 8, "real": 8, "stream": [2, 8], "scienc": [8, 10], "44": 8, "443": 8, "463": 8, "30": 8, "mcminn": 8, "yashar": 8, "moshfeghi": 8, "joemon": 8, "jose": 8, "build": 8, "larg": [2, 8], "scale": [2, 8], "22nd": 8, "409": 8, "418": 8, "31": 8, "alaa": 8, "alharbi": 8, "mark": [2, 8], "kawarith": 8, "sixth": 8, "42": [2, 8], "52": 8, "xiaozhi": 8, "ziqi": 8, "wangyi": 8, "rong": 8, "zhiyuan": 8, "juanzi": 8, "yankai": 8, "jie": 8, "massiv": 8, "1652": 8, "1671": 8, "alexandra": 8, "olteanu": 8, "carlo": 8, "castillo": 8, "fernando": 8, "diaz": 8, "sarah": 8, "vieweg": 8, "crisislex": 8, "lexicon": 8, "filter": 8, "microblog": 8, "crise": 8, "376": 8, "385": 8, "34": 8, "what": 8, "expect": 8, "when": [2, 8], "unexpect": 8, "happen": 8, "18th": 8, "cooper": 8, "994": 8, "1009": 8, "35": 8, "firoj": 8, "alam": 8, "ferda": 8, "ofli": 8, "muhammad": 8, "imran": 8, "hassan": 8, "sajjad": 8, "crisisbench": 8, "benchmark": 8, "humanitarian": 8, "923": 8, "932": 8, "37": 8, "shumin": 8, "deng": 8, "ningyu": 8, "jiaojian": 8, "kang": 8, "yichi": 8, "huajun": 8, "meta": 8, "dynam": 8, "memori": 8, "prototyp": 8, "few": 8, "shot": 8, "13th": 8, "search": 8, "151": 8, "159": 8, "shadi": 8, "elbassuoni": 8, "patrick": 8, "meier": 8, "nugget": 8, "iscram": 8, "201": 8, "791": 8, "801": 8, "39": 8, "aupetit": 8, "tale": 8, "three": 8, "hurrican": 8, "harvei": 8, "irma": 8, "maria": 8, "1805": 8, "05144": 8, "shafiq": 8, "joti": 8, "semi": 8, "convolut": [2, 8], "classifi": 8, "41": 8, "umair": 8, "qazi": 8, "human": 8, "annot": 8, "incid": 8, "933": 8, "942": 8, "00": [9, 13], "000": 9, "total": [9, 11, 13], "execut": [9, 13], "galleri": [9, 11, 12], "mem": [9, 13], "mb": [9, 13], "sphx_glr_tutorials_exampl": [9, 12, 13], "great": 10, "effort": 10, "buaa": 10, "bit": 10, "kust": 10, "uic": 10, "member": 10, "beihang": 10, "univers": 10, "email": 10, "zhangkun23": 10, "edu": 10, "cn": 10, "beij": 10, "institut": 10, "technologi": 10, "kunm": 10, "lip": 10, "stu": 10, "penghao": 10, "illinoi": 10, "chicago": 10, "psyu": 10, "go": 11, "end": [2, 11], "full": 11, "show": [11, 12], "how": [11, 12], "plot": [2, 11, 12], "simpl": [11, 12], "chart": [11, 12], "matplotlib": [11, 12], "pyplot": 11, "plt": 11, "\u6570\u636e\u51c6\u5907": 11, "\u7ed8\u5236\u6298\u7ebf\u56fe": 11, "xlabel": 11, "axi": 11, "ylabel": 11, "\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u751f\u6210\u5e76\u663e\u793a\u56fe\u8868": 11, "script": 11, "minut": 11, "238": [11, 13], "second": [0, 2, 4, 11], "jupyt": 11, "notebook": 11, "ipynb": 11, "sphinx": [11, 12], "uncas": [], "128": 2, "get_bert_embed": [], "util": 0, "multilingu": 0, "basic": 0, "statist": 0, "analyz": 0, "isol": [0, 2], "timestamp": 0, "iso": 0, "format": [0, 4], "two": [0, 4], "dai": [0, 2], "map": [0, 2], "word2id": 0, "tupl": [0, 2], "created_at": [0, 2], "against": 0, "than": 0, "get_dataset_info": 1, "arabic_7": 1, "event2012_100": 1, "event2018_100": 1, "mix_data": 1, "crisislext6": 1, "crisislext7": 1, "raw": 2, "dure": 2, "prior": 2, "random": 2, "reproduc": 2, "perplex": 2, "frequenc": 2, "per": 2, "chunk": 2, "rate": 2, "1e": 2, "dropout": 2, "keep": 2, "probabl": 2, "vocabulari": 2, "hidden": 2, "layer": 2, "pad": 2, "dimension": 2, "minimum": 2, "algorithm": 2, "skip": 2, "gram": 2, "cbow": 2, "num_best": 2, "threshold": 2, "n_worker": 2, "mover": 2, "measur": 2, "worker": 2, "\u4f18\u5316\u7684\u6570\u636e\u9884\u5904\u7406": 2, "\u4f18\u5316\u7684\u4e8b\u4ef6\u68c0\u6d4b": 2, "_save_result": 2, "\u4fdd\u5b58\u7ed3\u679c\u7684\u8f85\u52a9\u65b9\u6cd5": 2, "process_docu": 2, "keyword": 2, "co": 2, "repeat": 2, "must": 2, "occur": 2, "select": 2, "n_epoch": 2, "n_infer_epoch": 2, "window_s": 2, "patienc": 2, "n_neighbor": 2, "800": 2, "word_embedding_dim": 2, "use_hardest_neg": 2, "gpuid": 2, "is_increment": 2, "add_map": 2, "tmodel_path": 2, "tmodel": 2, "tealang": 2, "data_path1": 2, "data_path2": 2, "lang1": 2, "lang2": 2, "mt": 2, "is_stat": 2, "graph_lang": 2, "tgtlang": 2, "translinear": 2, "dictran": 2, "fr": 2, "en": 2, "wordsfrench": 2, "slide": 2, "wait": 2, "befor": 2, "mini": 2, "neighbor": 2, "dimens": 2, "output": [2, 4], "attent": 2, "head": 2, "residu": 2, "connect": 2, "percentag": 2, "acceler": 2, "mask": 2, "teacher": 2, "temperatur": 2, "momentum": 2, "drop": 2, "static": 2, "linear": 2, "200": 2, "use_dgi": 2, "kpgnn_incremental_test": 2, "resume_path": 2, "resume_point": 2, "resume_curr": 2, "infomax": 2, "obsolet": 2, "resum": 2, "is_shar": 2, "inter_opt": 2, "cat_w_avg": 2, "is_initi": 2, "sampler": 2, "rl_sampler": 2, "cluster_typ": 2, "threshold_start0": 2, "rl_step0": 2, "02": 2, "rl_start0": 2, "eps_start": 2, "eps_step": 2, "min_pts_start": 2, "min_pts_step": 2, "incremental_test": 2, "share": 2, "multi": 2, "rl": 2, "point": 2, "finevent_model": 2, "rl_threshold": 2, "save_edge_index": 2, "sparse_tran": 2, "datapath": 2, "s_m_tid_userid_tid": 2, "npz": 2, "coo_tran": 2, "create_dataset": 2, "loadpath": 2, "create_homodataset": 2, "valid_perc": 2, "create_offline_homodataset": 2, "create_multi_relational_graph": 2, "save_multi_relational_graph": 2, "run_hdbscan": 2, "gen_offline_mask": 2, "extracted_featur": 2, "mysampl": 2, "multi_relational_edge_index": 2, "node_idx": 2, "margnn": 2, "n_id": 2, "rl_neighbor_filter_ful": 2, "multi_r_data": 2, "multi_forward_agg": 2, "foward_arg": 2, "iter_epoch": 2, "adopt": 2, "intra_agg": 2, "inter_agg": 2, "pre_node_dist": 2, "culcul": 2, "order": 2, "avoid": 2, "repetit": 2, "descript": 2, "rl_neighbor_filt": 2, "load_path": 2, "finetune_epoch": 2, "oldnum": 2, "novelnum": 2, "1200": 2, "add_ort": 2, "add_pair": 2, "queri": 2, "fine": 2, "tune": 2, "novel": 2, "factor": 2, "orthogon": 2, "regular": 2, "wise": 2, "constraint": 2, "datas": 2, "re": 2, "drl": 2, "256": 2, "n_pred_hid": 2, "g_pred_hid": 2, "eval_freq": 2, "mad": 2, "glr": 2, "6e": 2, "07": 2, "nlr": 2, "05": 2, "ge": 2, "ne": 2, "gepoch": 2, "105": 2, "nepoch": 2, "move": 2, "decai": 2, "0000006": 2, "00001": 2, "neighbours_num": 2, "80": 2, "use_uncertainti": 2, "mse": 2, "digamma": 2, "learning_r": 2, "0001": 2, "weight_decai": 2, "plm_path": 2, "base_plm_model": 2, "roberta": 2, "plm_tune": 2, "use_ctx_att": 2, "ctx_att_head_num": 2, "pmt_feat": 2, "lmda1": 2, "01": 2, "lmda2": 2, "005": 2, "tao": 2, "2e": 2, "step_lr_gamma": 2, "98": 2, "max_epoch": 2, "ckpt_path": 2, "ckpt": 2, "eva_data": 2, "early_stop_pati": 2, "early_stop_monitor": 2, "sample_num_tweet": 2, "60": 2, "context": 2, "lambda": 2, "hyperparamet": 2, "010": 2, "90": 2, "checkpoint": 2, "els": 2, "dataitem": 2, "event_id": 2, "filtered_word": 2, "url": 2, "hashtag": 2, "alia": 2, "preprocess_al": 2, "to_sparse_matrix": 2, "feat_to_tw": 2, "tw_num": 2, "build_entity_adj": 2, "build_hashtag_adj": 2, "build_words_adj": 2, "build_user_adj": 2, "build_creat_at_adj": 2, "tweet_to_ev": 2, "build_feats_adj": 2, "feat": 2, "build_feat_adj": 2, "col": 2, "get_time_rel": 2, "tw_i": 2, "tw_j": 2, "delta": 2, "timedelta": 2, "datetim": 2, "14400": 2, "make_train_sampl": 2, "tw_adj": 2, "tw_to_ev": 2, "make_ref_sampl": 2, "process_block": 2, "split_train_test_valid": 2, "split_into_block": 2, "pre_process": 2, "get_model": 2, "num_train_batch": 2, "batch_to_tensor": 2, "create_train": 2, "lr_schedul": 2, "create_evalu": 2, "create_test": 2, "msg_feat": 2, "ref_num": 2, "test_on_block": 2, "blk": 2, "b": 2, "load_ckpt": 2, "start_run": 2, "train_on_block": 2, "blk_id": 2, "load_data_block": 2, "path_to_data": 2, "ckptwrapper": 2, "state_dict": 2, "get_model_st": 2, "width": 2, "print_tabl": 2, "tab": 2, "data_gener": 2, "shuffl": 2, "create_data_gener": 2, "batch_num": 2, "pad_seq": 2, "pad_left": 2, "truncat": 2, "fix": 2, "max": 2, "left": 2, "n_clust": 2, "msg_tag": 2, "run_dbscan": 2, "encode_sampl": 2, "raw_data": 2, "pmt_idx": 2, "count_condit": 2, "kei": 2, "calculate_average_min_scor": 2, "newscor": 2, "min_scor": 2, "max_scor": 2, "structattent": 2, "__init__": 2, "feat_dim": 2, "hid_dim": 2, "att_head_num": 2, "suggest": 2, "dens": 2, "hop": 2, "except": 2, "inpt": 2, "len": 2, "bsz": 2, "dim": 2, "head_num": 2, "pairpfxtuningencod": 2, "feat_siz": 2, "reload_plm": 2, "accumulate_reload_plm": 2, "accumulate_r": 2, "fix_plm": 2, "close": 2, "calss": 2, "get_closed_set_test_df": 2, "get_closed_set_messages_embed": 2, "get_open_set_messages_embed": 2, "split_open_set": 2, "root_path": 2, "main": 2, "split_and_save_mask": 2, "save_dir": 2, "train_siz": 2, "val_siz": 2, "test_siz": 2, "random_se": 2, "pt": 2, "pd": 2, "proport": 2, "get_stable_point": 2, "run_hier_2d_se_mini_data": 2, "e_a": 2, "e_": 2, "search_stable_point": 2, "max_num_neighbor": 2, "get_graph_edg": 2, "attribut": 2, "get_knn_edg": 2, "default_num_neighbor": 2, "get_global_edg": 2, "get_subgraphs_edg": 2, "graph_split": 2, "weighted_global_edg": 2, "subgraph": 2, "origin": 2, "start_index": 2, "end_index": 2, "subset": 2, "which": 2, "serv": 2, "all_subgraphs_edg": 2, "hier_2d_se_mini": 2, "n_messag": 2, "2d": 2, "se": 2, "get_vol": 2, "calc_1ds": 2, "1d": 2, "update_1ds": 2, "original_1ds": 2, "new_edg": 2, "after": 2, "insert": 2, "get_cut": 2, "comm": 2, "sum": 2, "degre": 2, "cut": 2, "get_volum": 2, "calc_2ds": 2, "show_divis": 2, "show_struc_data": 2, "show_struc_data_2d": 2, "print_graph": 2, "update_struc_data": 2, "communitii": 2, "leaf": 2, "cummun": 2, "store": 2, "struc_data": 2, "update_struc_data_2d": 2, "struc_data_2d": 2, "init_divis": 2, "divis": 2, "own": 2, "add_isol": 2, "update_division_mins": 2, "greedili": 2, "tree": 2, "vanilla_2d_se_mini": 2, "weighted_edg": 2, "vanilla": 2, "greedi": 2, "test_vanilla_2d_se_mini": 2, "replaceatus": 2, "replac": 2, "removeunicod": 2, "unicod": 2, "x96": 2, "replaceurl": 2, "address": 2, "replacemultiexclamationmark": 2, "exlam": 2, "replacemultiquestionmark": 2, "question": 2, "removeemoticon": 2, "emoticon": 2, "removenewlin": 2, "preprocess_sent": 2, "preprocess_french_sent": 2, "sbert_emb": [2, 4], "s_list": [2, 4], "labels_tru": 2, "labels_pr": 2, "decod": 2, "intermedi": [], "final": [], "if_updata": 2, "run_hier_2d_se_mini_open_set": 2, "400": 2, "test_with_one_block": 2, "run_hier_2d_se_mini_closed_set": 2, "create_process_open_set": 2, "create_process_closed_set": 2, "run_process": 2, "make_symmetr": 2, "matrix": [2, 4], "folder": 2, "get_best_egd": 2, "adj_matrix_": 2, "subgraphs_": 2, "all_subgraph": 2, "get_best_nod": 2, "get_subgraph": 2, "adj_matrix": 2, "k_max": 2, "evaluate_label": 2, "upper": 4, "specifi": 4, "valueerror": 4, "otherwis": 4, "yyyi": 4, "mm": 4, "dd": 4, "hh": 4, "ss": 4, "cosin": 4, "zhilin": 10, "21377240": 10, "kaiwei": 10, "yangkw": 10, "identifi": 2, "relationship": 2, "data_preprocess": 2, "save_model_path": 2, "saved_model": 2, "n_cluster_tri": 2, "edge_typ": 2, "hgae": 2, "dsi": 2, "pre_anchor": 2, "anchor_r": 2, "thre": 2, "diag": 2, "num_layers_ga": 2, "hidden_dim_ga": 2, "out_dim_ga": 2, "lr_gae": 2, "w_decai": 2, "nonlin": 2, "use_attn": 2, "use_bia": 2, "decay_r": 2, "max_num": 2, "lr_pre": 2, "trial": 2, "gae": 2, "diagon": 2, "curvatur": 2, "radiu": 2, "non": 2, "bia": 2, "level": 2, "trainer": 2, "getgaepr": 2, "offline_train": 2, "block_i": 2, "getntblockdata": 2, "block_id": 2, "getotherbyedg": 2, "gae_featur": 2, "get_set_test_df": 2, "get_set_messages_embed": 2, "get_best_threshold": 2, "construct_graph_al": 2, "mobius_mul": 2, "mobiu": 2, "multipl": 2, "geodesic_fn": 2, "nb_point": 2, "coordin": 2, "geodes": 2, "plot_geodes": 2, "ax": 2, "plot_leav": 2, "manifold": 2, "colors_dict": 2, "get_color": 2, "color_se": 2, "1234": 2, "color": 2, "plot_nx_graph": 2, "root": 2, "edgeindextyp": 2, "neg_edge_index": 2, "singleblockdata": 2, "num_featur": 2, "num_nod": 2, "edge_index_typ": 2, "anchor_featur": 2, "num_anchor": 2, "anchor_edge_index_typ": 2, "anchor_ass": 2, "anchor_label": 2, "dsidata": 2, "pretrain": 2, "datapartit": 2, "userid": 2, "decoding_cluster_from_tre": 2, "merge_nodes_onc": 2, "root_coord": 2, "group_list": 2, "cluster_metr": 2, "get_new_predict": 2, "clusteracc": 2, "evaluatefromlabel": 2, "cal_auc_ap": 2, "coord": 2, "tree_index": 2, "is_leaf": 2, "construct_tre": 2, "nodes_list": 2, "longtensor": 2, "coords_list": 2, "ass_list": 2, "to_networkx_tre": 2, "input_data": 2, "lorentzgraphconvolut": 2, "lorentzlinear": 2, "lorentzagg": 2, "lorentz": 2, "lorentzassign": 2, "lsenetlay": 2, "poincarekmean": 2, "n_cluster": 2, "n_init": 2, "max_it": 2, "tol": 2, "08": 2, "fit_predict": 2, "fit_transform": 2, "lsenet": 2, "z": 2, "cinner": 2, "to_poincar": 2, "from_poincar": 2, "ep": 2, "06": 2, "frechet_mean": 2, "keepdim": 2, "poincar": 2, "poincarebal": 2, "from_lorentz": 2, "to_lorentz": 2, "mask_edg": 2, "neg_edg": 2, "val_prop": 2, "test_prop": 2, "twitterdataset": 2, "init_incr_data": 2, "graphencod": 2, "fermidiracdecod": 2, "hypergraphautoencod": 2, "select_activ": 2, "frechet_mean_poincar": 2, "sample_gumbel": 2, "gumbel_softmax_sampl": 2, "logit": 2, "gumbel_softmax": 2, "hard": 2, "st": 2, "gumpl": 2, "softmax": 2, "n_class": 2, "flatten": 2, "hot": 2, "gumbel_sigmoid": 2, "tau": 2, "graph_top_k": 2, "dense_adj": 2, "adjacency2index": 2, "adjac": 2, "topk": 2, "_summary_": 2, "edge_weight": 2, "index2adjac": 2, "is_spars": 2, "sparse_to_tupl": 2, "sparse_mx": 2, "tensor_to_spars": 2, "sparse_tensor": 2, "500": 2, "getc": 2, "getnewpredict": 2, "get_anchor": 2, "artanh": 2, "ctx": 2, "backward": 2, "grad_output": 2, "tanh": 2, "clamp": 2, "mobius_add": 2, "hyperbolic_distance1": 2, "p1": 2, "p2": 2, "hyperbolic_dist": 2, "z_u": 2, "z_h": 2, "contrastive_loss": 2, "z_h_all": 2, "l_conv": 2, "z_e": 2, "n_": 2, "overal": 2, "get_agg_feautur": 2, "x1": 2, "x2": 2, "x3": 2, "get_euc_anchor": 2, "get_cluster_label": 2, "cluster_predict": 2, "get_euc_anchors_alladj": 2, "get_euc_anchors_alladj_a": 2, "compute_argmin": 2, "all_1ds": 2, "search_threshold": 2, "best_threshold": 2}, "objects": {"SocialED.dataset": [[1, 0, 0, "-", "dataloader"]], "SocialED.dataset.dataloader": [[1, 1, 1, "", "Arabic_7"], [1, 1, 1, "", "Arabic_Twitter"], [1, 1, 1, "", "CrisisLexT26"], [1, 1, 1, "", "CrisisLexT6"], [1, 1, 1, "", "CrisisLexT7"], [1, 1, 1, "", "CrisisMMD"], [1, 1, 1, "", "CrisisNLP"], [1, 1, 1, "", "DatasetLoader"], [1, 1, 1, "", "Event2012"], [1, 1, 1, "", "Event2012_100"], [1, 1, 1, "", "Event2018"], [1, 1, 1, "", "Event2018_100"], [1, 1, 1, "", "HumAID"], [1, 1, 1, "", "KBP"], [1, 1, 1, "", "MAVEN"], [1, 1, 1, "", "Mix_Data"]], "SocialED.dataset.dataloader.Arabic_7": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.Arabic_Twitter": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.CrisisLexT26": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.CrisisLexT6": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.CrisisLexT7": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.CrisisMMD": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.CrisisNLP": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.DatasetLoader": [[1, 2, 1, "", "download"], [1, 2, 1, "", "download_and_cleanup"], [1, 2, 1, "", "get_dataset_info"], [1, 2, 1, "", "get_dataset_language"], [1, 2, 1, "", "get_dataset_name"], [1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.Event2012": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.Event2012_100": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.Event2018": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.Event2018_100": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.HumAID": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.KBP": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.MAVEN": [[1, 2, 1, "", "load_data"]], "SocialED.dataset.dataloader.Mix_Data": [[1, 2, 1, "", "load_data"]], "SocialED.detector": [[2, 0, 0, "-", "adpsemevent"], [2, 0, 0, "-", "bilstm"], [2, 0, 0, "-", "clkd"], [2, 0, 0, "-", "eventx"], [2, 0, 0, "-", "finevent"], [2, 0, 0, "-", "glove"], [2, 0, 0, "-", "hcrc"], [2, 0, 0, "-", "hisevent"], [2, 0, 0, "-", "hypersed"], [2, 0, 0, "-", "kpgnn"], [2, 0, 0, "-", "lda"], [2, 0, 0, "-", "qsgnn"], [2, 0, 0, "-", "rplmsed"], [2, 0, 0, "-", "sbert"], [2, 0, 0, "-", "uclsed"], [2, 0, 0, "-", "wmd"], [2, 0, 0, "-", "word2vec"]], "SocialED.detector.adpsemevent": [[2, 1, 1, "", "ADPSEMEvent"], [2, 1, 1, "", "Preprocessor"], [2, 3, 1, "", "SBERT_embed"], [2, 1, 1, "", "SE"], [2, 3, 1, "", "create_process_closed_set"], [2, 3, 1, "", "create_process_open_set"], [2, 3, 1, "", "decode"], [2, 3, 1, "", "evaluate_labels"], [2, 3, 1, "", "get_best_egde"], [2, 3, 1, "", "get_best_node"], [2, 3, 1, "", "get_global_edges"], [2, 3, 1, "", "get_graph_edges"], [2, 3, 1, "", "get_knn_edges"], [2, 3, 1, "", "get_stable_point"], [2, 3, 1, "", "get_subgraphs"], [2, 3, 1, "", "get_subgraphs_edges"], [2, 3, 1, "", "hier_2D_SE_mini"], [2, 3, 1, "", "make_symmetric"], [2, 3, 1, "", "preprocess_french_sentence"], [2, 3, 1, "", "preprocess_sentence"], [2, 3, 1, "", "removeEmoticons"], [2, 3, 1, "", "removeNewLines"], [2, 3, 1, "", "removeUnicode"], [2, 3, 1, "", "replaceAtUser"], [2, 3, 1, "", "replaceMultiExclamationMark"], [2, 3, 1, "", "replaceMultiQuestionMark"], [2, 3, 1, "", "replaceURL"], [2, 3, 1, "", "run_hier_2D_SE_mini_closed_set"], [2, 3, 1, "", "run_hier_2D_SE_mini_open_set"], [2, 3, 1, "", "run_processes"], [2, 3, 1, "", "search_stable_points"], [2, 3, 1, "", "test_vanilla_2D_SE_mini"], [2, 3, 1, "", "vanilla_2D_SE_mini"]], "SocialED.detector.adpsemevent.ADPSEMEvent": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.adpsemevent.Preprocessor": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_closed_set_messages_embeddings"], [2, 2, 1, "", "get_closed_set_test_df"], [2, 2, 1, "", "get_open_set_messages_embeddings"], [2, 2, 1, "", "preprocess"], [2, 2, 1, "", "split_and_save_masks"], [2, 2, 1, "", "split_open_set"]], "SocialED.detector.adpsemevent.SE": [[2, 2, 1, "", "add_isolates"], [2, 2, 1, "", "calc_1dSE"], [2, 2, 1, "", "calc_2dSE"], [2, 2, 1, "", "get_cut"], [2, 2, 1, "", "get_vol"], [2, 2, 1, "", "get_volume"], [2, 2, 1, "", "init_division"], [2, 2, 1, "", "print_graph"], [2, 2, 1, "", "show_division"], [2, 2, 1, "", "show_struc_data"], [2, 2, 1, "", "show_struc_data_2d"], [2, 2, 1, "", "update_1dSE"], [2, 2, 1, "", "update_division_MinSE"], [2, 2, 1, "", "update_struc_data"], [2, 2, 1, "", "update_struc_data_2d"]], "SocialED.detector.bilstm": [[2, 1, 1, "", "BiLSTM"], [2, 1, 1, "", "FunctionNegativeTripletSelector"], [2, 3, 1, "", "HardestNegativeTripletSelector"], [2, 1, 1, "", "LSTM"], [2, 1, 1, "", "OnlineTripletLoss"], [2, 3, 1, "", "RandomNegativeTripletSelector"], [2, 1, 1, "", "TripletSelector"], [2, 1, 1, "", "VectorizeData"], [2, 3, 1, "", "hardest_negative"], [2, 3, 1, "", "pdist"], [2, 3, 1, "", "random_hard_negative"]], "SocialED.detector.bilstm.BiLSTM": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "load_embeddings"], [2, 2, 1, "", "preprocess"], [2, 2, 1, "", "run_train"], [2, 2, 1, "", "split"], [2, 2, 1, "", "train"]], "SocialED.detector.bilstm.FunctionNegativeTripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.bilstm.LSTM": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "init_hidden"]], "SocialED.detector.bilstm.OnlineTripletLoss": [[2, 2, 1, "", "forward"]], "SocialED.detector.bilstm.TripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.bilstm.VectorizeData": [[2, 2, 1, "", "pad_data"]], "SocialED.detector.clkd": [[2, 1, 1, "", "AccumulatedAccuracyMetric"], [2, 1, 1, "", "Arabic_preprocessor"], [2, 1, 1, "", "AverageNonzeroTripletsMetric"], [2, 1, 1, "", "CLKD"], [2, 1, 1, "", "FunctionNegativeTripletSelector"], [2, 1, 1, "", "GAT"], [2, 1, 1, "", "GATLayer"], [2, 3, 1, "", "HardestNegativeTripletSelector"], [2, 1, 1, "", "Metric"], [2, 1, 1, "", "MultiHeadGATLayer"], [2, 1, 1, "", "OnlineTripletLoss"], [2, 1, 1, "", "Preprocessor"], [2, 3, 1, "", "RandomNegativeTripletSelector"], [2, 1, 1, "", "SocialDataset"], [2, 1, 1, "", "TripletSelector"], [2, 3, 1, "", "evaluate_model"], [2, 3, 1, "", "extract_embeddings"], [2, 3, 1, "", "generateMasks"], [2, 3, 1, "", "getdata"], [2, 3, 1, "", "graph_statistics"], [2, 3, 1, "", "infer"], [2, 3, 1, "", "initial_maintain"], [2, 3, 1, "", "intersection"], [2, 3, 1, "", "mutual_extract_embeddings"], [2, 3, 1, "", "mutual_infer"], [2, 3, 1, "", "mutual_train"], [2, 3, 1, "", "pdist"], [2, 3, 1, "", "random_hard_negative"], [2, 3, 1, "", "run_kmeans"], [2, 3, 1, "", "save_embeddings"]], "SocialED.detector.clkd.AccumulatedAccuracyMetric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.clkd.Arabic_preprocessor": [[2, 2, 1, "", "clean_text"]], "SocialED.detector.clkd.AverageNonzeroTripletsMetric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.clkd.CLKD": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.clkd.FunctionNegativeTripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.clkd.GAT": [[2, 2, 1, "", "forward"]], "SocialED.detector.clkd.GATLayer": [[2, 2, 1, "", "edge_attention"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "message_func"], [2, 2, 1, "", "reduce_func"], [2, 2, 1, "", "reset_parameters"]], "SocialED.detector.clkd.Metric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.clkd.MultiHeadGATLayer": [[2, 2, 1, "", "forward"]], "SocialED.detector.clkd.OnlineTripletLoss": [[2, 2, 1, "", "forward"]], "SocialED.detector.clkd.Preprocessor": [[2, 2, 1, "", "construct_graph"], [2, 2, 1, "", "construct_graph_from_df"], [2, 2, 1, "", "construct_incremental_dataset"], [2, 2, 1, "", "df_to_t_features"], [2, 2, 1, "", "documents_to_features"], [2, 2, 1, "", "extract_time_feature"], [2, 2, 1, "", "generate_initial_features"], [2, 2, 1, "", "get_word2id_emb"], [2, 2, 1, "", "getlinear_transform_features"], [2, 2, 1, "", "networkx_to_dgl_graph"], [2, 2, 1, "", "nonlinear_transform_features"]], "SocialED.detector.clkd.SocialDataset": [[2, 2, 1, "", "load_adj_matrix"], [2, 2, 1, "", "remove_obsolete_nodes"]], "SocialED.detector.clkd.TripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.eventx": [[2, 1, 1, "", "EventX"], [2, 3, 1, "", "detect_kw_communities"]], "SocialED.detector.eventx.EventX": [[2, 2, 1, "", "classify_docs"], [2, 2, 1, "", "construct_dict"], [2, 2, 1, "", "construct_kw_graph"], [2, 2, 1, "", "detect_kw_communities_iter"], [2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "map_communities"], [2, 2, 1, "", "map_dicts"], [2, 2, 1, "", "map_tweets"], [2, 2, 1, "", "preprocess"], [2, 2, 1, "", "split"]], "SocialED.detector.finevent": [[2, 1, 1, "", "AccumulatedAccuracyMetric"], [2, 1, 1, "", "AverageNonzeroTripletsMetric"], [2, 1, 1, "", "AvgReadout"], [2, 1, 1, "", "Discriminator"], [2, 1, 1, "", "FinEvent"], [2, 1, 1, "", "FinEvent_model"], [2, 1, 1, "", "FunctionNegativeTripletSelector"], [2, 1, 1, "", "GAT"], [2, 3, 1, "", "HardestNegativeTripletSelector"], [2, 1, 1, "", "Inter_AGG"], [2, 1, 1, "", "Intra_AGG"], [2, 1, 1, "", "MarGNN"], [2, 1, 1, "", "Metric"], [2, 1, 1, "", "MySampler"], [2, 1, 1, "", "OnlineTripletLoss"], [2, 1, 1, "", "Preprocessor"], [2, 3, 1, "", "RL_neighbor_filter"], [2, 3, 1, "", "RL_neighbor_filter_full"], [2, 3, 1, "", "RandomNegativeTripletSelector"], [2, 1, 1, "", "TripletSelector"], [2, 3, 1, "", "coo_trans"], [2, 3, 1, "", "create_dataset"], [2, 3, 1, "", "create_homodataset"], [2, 3, 1, "", "create_multi_relational_graph"], [2, 3, 1, "", "create_offline_homodataset"], [2, 3, 1, "", "evaluate_model"], [2, 3, 1, "", "gen_offline_masks"], [2, 3, 1, "", "generateMasks"], [2, 3, 1, "", "hardest_negative"], [2, 3, 1, "", "intersection"], [2, 3, 1, "", "multi_forward_agg"], [2, 3, 1, "", "pdist"], [2, 3, 1, "", "pre_node_dist"], [2, 3, 1, "", "random_hard_negative"], [2, 3, 1, "", "run_hdbscan"], [2, 3, 1, "", "run_kmeans"], [2, 3, 1, "", "save_embeddings"], [2, 3, 1, "", "save_multi_relational_graph"], [2, 3, 1, "", "sparse_trans"]], "SocialED.detector.finevent.AccumulatedAccuracyMetric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.finevent.AverageNonzeroTripletsMetric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.finevent.AvgReadout": [[2, 2, 1, "", "forward"]], "SocialED.detector.finevent.Discriminator": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "weights_init"]], "SocialED.detector.finevent.FinEvent": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.finevent.FinEvent_model": [[2, 2, 1, "", "inference"], [2, 2, 1, "", "initial_maintain"]], "SocialED.detector.finevent.FunctionNegativeTripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.finevent.GAT": [[2, 2, 1, "", "forward"]], "SocialED.detector.finevent.Inter_AGG": [[2, 2, 1, "", "forward"]], "SocialED.detector.finevent.Intra_AGG": [[2, 2, 1, "", "forward"]], "SocialED.detector.finevent.MarGNN": [[2, 2, 1, "", "forward"]], "SocialED.detector.finevent.Metric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.finevent.MySampler": [[2, 2, 1, "", "sample"]], "SocialED.detector.finevent.OnlineTripletLoss": [[2, 2, 1, "", "forward"]], "SocialED.detector.finevent.Preprocessor": [[2, 2, 1, "", "construct_graph"], [2, 2, 1, "", "construct_graph_from_df"], [2, 2, 1, "", "construct_incremental_dataset"], [2, 2, 1, "", "df_to_t_features"], [2, 2, 1, "", "documents_to_features"], [2, 2, 1, "", "extract_time_feature"], [2, 2, 1, "", "generate_initial_features"], [2, 2, 1, "", "networkx_to_dgl_graph"], [2, 2, 1, "", "save_edge_index"]], "SocialED.detector.finevent.TripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.glove": [[2, 1, 1, "", "GloVe"]], "SocialED.detector.glove.GloVe": [[2, 2, 1, "", "create_vectors"], [2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "load_glove_vectors"], [2, 2, 1, "", "load_model"], [2, 2, 1, "", "preprocess"], [2, 2, 1, "", "text_to_glove_vector"]], "SocialED.detector.hcrc": [[2, 1, 1, "", "ActorCritic"], [2, 1, 1, "", "BaseBuffer"], [2, 1, 1, "", "CNNEncoder"], [2, 1, 1, "", "DQN"], [2, 1, 1, "", "DQN_Config"], [2, 3, 1, "", "DRL_cluster"], [2, 1, 1, "", "EMA"], [2, 1, 1, "", "Encoder"], [2, 1, 1, "", "GraphLevel"], [2, 1, 1, "", "Graph_ModelTrainer"], [2, 1, 1, "", "HCRC"], [2, 1, 1, "", "MLPEncoder"], [2, 3, 1, "", "NMI_cluster"], [2, 1, 1, "", "NodeLevel"], [2, 1, 1, "", "Node_ModelTrainer"], [2, 1, 1, "", "PPO"], [2, 1, 1, "", "PPO_Config"], [2, 1, 1, "", "QNet"], [2, 1, 1, "", "SinglePass"], [2, 3, 1, "", "aug_edge"], [2, 3, 1, "", "calculate_nature_cnn_out_dim"], [2, 3, 1, "", "config2string"], [2, 3, 1, "", "construct_graph"], [2, 3, 1, "", "construct_graph_from_df"], [2, 3, 1, "", "currentTime"], [2, 3, 1, "", "df_to_t_features"], [2, 3, 1, "", "documents_to_features"], [2, 1, 1, "", "embedder"], [2, 3, 1, "", "enumerateConfig"], [2, 3, 1, "", "evaluate_fun"], [2, 3, 1, "", "extract_time_feature"], [2, 3, 1, "", "getData"], [2, 3, 1, "", "get_Graph_Dataset"], [2, 3, 1, "", "get_Node_Dataset"], [2, 3, 1, "", "get_data"], [2, 3, 1, "", "get_edge_index"], [2, 3, 1, "", "get_loss"], [2, 3, 1, "", "get_task"], [2, 3, 1, "", "init_weights"], [2, 3, 1, "", "make_batch"], [2, 3, 1, "", "make_transition"], [2, 3, 1, "", "normalize_adj"], [2, 3, 1, "", "printConfig"], [2, 3, 1, "", "random_cluster"], [2, 3, 1, "", "save_data"], [2, 3, 1, "", "semi_cluster"], [2, 3, 1, "", "semi_loss"], [2, 3, 1, "", "set_requires_grad"], [2, 3, 1, "", "sim"], [2, 3, 1, "", "unique"], [2, 3, 1, "", "update_moving_average"]], "SocialED.detector.hcrc.ActorCritic": [[2, 2, 1, "", "act"], [2, 2, 1, "", "evaluate_AC"], [2, 2, 1, "", "forward"]], "SocialED.detector.hcrc.BaseBuffer": [[2, 2, 1, "", "add"], [2, 2, 1, "", "clear"], [2, 2, 1, "", "get_data_buffer"], [2, 2, 1, "", "get_len"], [2, 2, 1, "", "sample"]], "SocialED.detector.hcrc.CNNEncoder": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "get_dim"]], "SocialED.detector.hcrc.DQN": [[2, 2, 1, "", "add_buffer"], [2, 2, 1, "", "epsilon_decay"], [2, 2, 1, "", "learn"], [2, 2, 1, "", "save_model"], [2, 2, 1, "", "select_action"], [2, 2, 1, "", "update_network"]], "SocialED.detector.hcrc.EMA": [[2, 2, 1, "", "update_average"]], "SocialED.detector.hcrc.Encoder": [[2, 2, 1, "", "forward"]], "SocialED.detector.hcrc.GraphLevel": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "reset_moving_average"], [2, 2, 1, "", "update_moving_average"]], "SocialED.detector.hcrc.Graph_ModelTrainer": [[2, 2, 1, "", "get_embedding"], [2, 2, 1, "", "train"]], "SocialED.detector.hcrc.HCRC": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"]], "SocialED.detector.hcrc.MLPEncoder": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "get_dim"]], "SocialED.detector.hcrc.NodeLevel": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "reset_moving_average"], [2, 2, 1, "", "update_moving_average"]], "SocialED.detector.hcrc.Node_ModelTrainer": [[2, 2, 1, "", "get_embedding"], [2, 2, 1, "", "train"]], "SocialED.detector.hcrc.PPO": [[2, 2, 1, "", "add_buffer"], [2, 2, 1, "", "learn"], [2, 2, 1, "", "save_model"], [2, 2, 1, "", "select_action"]], "SocialED.detector.hcrc.QNet": [[2, 2, 1, "", "forward"]], "SocialED.detector.hcrc.SinglePass": [[2, 2, 1, "", "clustering"], [2, 2, 1, "", "clustering_init"], [2, 2, 1, "", "get_center"], [2, 2, 1, "", "get_info_cluster"], [2, 2, 1, "", "get_reward"], [2, 2, 1, "", "get_state"], [2, 2, 1, "", "run_cluster"], [2, 2, 1, "", "run_cluster_init"], [2, 2, 1, "", "run_cluster_sim"]], "SocialED.detector.hisevent": [[2, 1, 1, "", "HISEvent"], [2, 1, 1, "", "Preprocessor"], [2, 3, 1, "", "SBERT_embed"], [2, 1, 1, "", "SE"], [2, 3, 1, "", "decode"], [2, 3, 1, "", "evaluate"], [2, 3, 1, "", "get_global_edges"], [2, 3, 1, "", "get_graph_edges"], [2, 3, 1, "", "get_knn_edges"], [2, 3, 1, "", "get_stable_point"], [2, 3, 1, "", "get_subgraphs_edges"], [2, 3, 1, "", "hier_2D_SE_mini"], [2, 3, 1, "", "preprocess_french_sentence"], [2, 3, 1, "", "preprocess_sentence"], [2, 3, 1, "", "removeEmoticons"], [2, 3, 1, "", "removeNewLines"], [2, 3, 1, "", "removeUnicode"], [2, 3, 1, "", "replaceAtUser"], [2, 3, 1, "", "replaceMultiExclamationMark"], [2, 3, 1, "", "replaceMultiQuestionMark"], [2, 3, 1, "", "replaceURL"], [2, 3, 1, "", "run_hier_2D_SE_mini_data"], [2, 3, 1, "", "search_stable_points"], [2, 3, 1, "", "test_vanilla_2D_SE_mini"], [2, 3, 1, "", "vanilla_2D_SE_mini"]], "SocialED.detector.hisevent.HISEvent": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.hisevent.Preprocessor": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "get_closed_set_messages_embeddings"], [2, 2, 1, "", "get_closed_set_test_df"], [2, 2, 1, "", "get_open_set_messages_embeddings"], [2, 2, 1, "", "preprocess"], [2, 2, 1, "", "split_and_save_masks"], [2, 2, 1, "", "split_open_set"]], "SocialED.detector.hisevent.SE": [[2, 2, 1, "", "add_isolates"], [2, 2, 1, "", "calc_1dSE"], [2, 2, 1, "", "calc_2dSE"], [2, 2, 1, "", "get_cut"], [2, 2, 1, "", "get_vol"], [2, 2, 1, "", "get_volume"], [2, 2, 1, "", "init_division"], [2, 2, 1, "", "print_graph"], [2, 2, 1, "", "show_division"], [2, 2, 1, "", "show_struc_data"], [2, 2, 1, "", "show_struc_data_2d"], [2, 2, 1, "", "update_1dSE"], [2, 2, 1, "", "update_division_MinSE"], [2, 2, 1, "", "update_struc_data"], [2, 2, 1, "", "update_struc_data_2d"]], "SocialED.detector.hypersed": [[2, 1, 1, "", "Artanh"], [2, 1, 1, "", "DSIData"], [2, 1, 1, "", "DataPartition"], [2, 1, 1, "", "Dataset"], [2, 1, 1, "", "EdgeIndexTypes"], [2, 1, 1, "", "FermiDiracDecoder"], [2, 3, 1, "", "Frechet_mean_poincare"], [2, 1, 1, "", "GraphEncoder"], [2, 1, 1, "", "HyperGraphAutoEncoder"], [2, 1, 1, "", "HyperSE"], [2, 1, 1, "", "HyperSED"], [2, 1, 1, "", "LSENet"], [2, 1, 1, "", "LSENetLayer"], [2, 3, 1, "", "L_ConV"], [2, 1, 1, "", "Lorentz"], [2, 1, 1, "", "LorentzAgg"], [2, 1, 1, "", "LorentzAssignment"], [2, 1, 1, "", "LorentzGraphConvolution"], [2, 1, 1, "", "LorentzLinear"], [2, 1, 1, "", "Node"], [2, 1, 1, "", "Poincare"], [2, 1, 1, "", "PoincareKMeans"], [2, 1, 1, "", "Preprocessor"], [2, 3, 1, "", "SBERT_embed"], [2, 1, 1, "", "SE"], [2, 1, 1, "", "SingleBlockData"], [2, 1, 1, "", "Trainer"], [2, 1, 1, "", "TwitterDataSet"], [2, 1, 1, "", "Views"], [2, 3, 1, "", "adjacency2index"], [2, 3, 1, "", "artanh"], [2, 3, 1, "", "cal_AUC_AP"], [2, 1, 1, "", "cluster_metrics"], [2, 3, 1, "", "compute_argmin"], [2, 3, 1, "", "construct_tree"], [2, 3, 1, "", "contrastive_loss"], [2, 3, 1, "", "decoding_cluster_from_tree"], [2, 3, 1, "", "geodesic_fn"], [2, 3, 1, "", "getC"], [2, 3, 1, "", "getNewPredict"], [2, 3, 1, "", "getOtherByedge"], [2, 3, 1, "", "get_agg_feauture"], [2, 3, 1, "", "get_anchor"], [2, 3, 1, "", "get_cluster_labels"], [2, 3, 1, "", "get_colors"], [2, 3, 1, "", "get_euc_anchors"], [2, 3, 1, "", "get_euc_anchors_alladj"], [2, 3, 1, "", "get_euc_anchors_alladj_as"], [2, 3, 1, "", "get_global_edges"], [2, 3, 1, "", "get_graph_edges"], [2, 3, 1, "", "get_knn_edges"], [2, 3, 1, "", "graph_top_K"], [2, 3, 1, "", "gumbel_sigmoid"], [2, 3, 1, "", "gumbel_softmax"], [2, 3, 1, "", "gumbel_softmax_sample"], [2, 3, 1, "", "hyperbolic_distance"], [2, 3, 1, "", "hyperbolic_distance1"], [2, 3, 1, "", "index2adjacency"], [2, 3, 1, "", "mask_edges"], [2, 3, 1, "", "merge_nodes_once"], [2, 3, 1, "", "mobius_add"], [2, 3, 1, "", "mobius_mul"], [2, 3, 1, "", "plot_geodesic"], [2, 3, 1, "", "plot_leaves"], [2, 3, 1, "", "plot_nx_graph"], [2, 3, 1, "", "preprocess_french_sentence"], [2, 3, 1, "", "preprocess_sentence"], [2, 3, 1, "", "removeEmoticons"], [2, 3, 1, "", "removeNewLines"], [2, 3, 1, "", "removeUnicode"], [2, 3, 1, "", "replaceAtUser"], [2, 3, 1, "", "replaceMultiExclamationMark"], [2, 3, 1, "", "replaceMultiQuestionMark"], [2, 3, 1, "", "replaceURL"], [2, 3, 1, "", "sample_gumbel"], [2, 3, 1, "", "search_threshold"], [2, 3, 1, "", "select_activation"], [2, 3, 1, "", "sparse_to_tuple"], [2, 3, 1, "", "tanh"], [2, 3, 1, "", "tensor_to_sparse"], [2, 3, 1, "", "to_networkx_tree"]], "SocialED.detector.hypersed.Artanh": [[2, 2, 1, "", "backward"], [2, 2, 1, "", "forward"]], "SocialED.detector.hypersed.DSIData": [[2, 4, 1, "", "adj"], [2, 4, 1, "", "degrees"], [2, 4, 1, "", "device"], [2, 4, 1, "", "edge_index"], [2, 4, 1, "", "feature"], [2, 4, 1, "", "neg_edge_index"], [2, 4, 1, "", "pretrain"], [2, 4, 1, "", "weight"]], "SocialED.detector.hypersed.DataPartition": [[2, 4, 1, "", "features"], [2, 4, 1, "", "labels"], [2, 4, 1, "", "num_classes"], [2, 4, 1, "", "num_features"], [2, 4, 1, "", "num_nodes"], [2, 4, 1, "", "views"]], "SocialED.detector.hypersed.Dataset": [[2, 4, 1, "", "data"], [2, 4, 1, "", "embedding"], [2, 4, 1, "", "path"]], "SocialED.detector.hypersed.EdgeIndexTypes": [[2, 4, 1, "", "adj"], [2, 4, 1, "", "degrees"], [2, 4, 1, "", "edge_index"], [2, 4, 1, "", "neg_edge_index"], [2, 4, 1, "", "weight"]], "SocialED.detector.hypersed.FermiDiracDecoder": [[2, 2, 1, "", "forward"]], "SocialED.detector.hypersed.GraphEncoder": [[2, 2, 1, "", "forward"]], "SocialED.detector.hypersed.HyperGraphAutoEncoder": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "loss"], [2, 2, 1, "", "normalize"]], "SocialED.detector.hypersed.HyperSE": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "loss"]], "SocialED.detector.hypersed.HyperSED": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.hypersed.LSENet": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "normalize"]], "SocialED.detector.hypersed.LSENetLayer": [[2, 2, 1, "", "forward"]], "SocialED.detector.hypersed.Lorentz": [[2, 2, 1, "", "Frechet_mean"], [2, 2, 1, "", "cinner"], [2, 2, 1, "", "from_poincare"], [2, 2, 1, "", "to_poincare"]], "SocialED.detector.hypersed.LorentzAgg": [[2, 2, 1, "", "forward"]], "SocialED.detector.hypersed.LorentzAssignment": [[2, 2, 1, "", "forward"]], "SocialED.detector.hypersed.LorentzGraphConvolution": [[2, 2, 1, "", "forward"]], "SocialED.detector.hypersed.LorentzLinear": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "reset_parameters"]], "SocialED.detector.hypersed.Poincare": [[2, 2, 1, "", "Frechet_mean"], [2, 2, 1, "", "from_lorentz"], [2, 2, 1, "", "to_lorentz"]], "SocialED.detector.hypersed.PoincareKMeans": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "fit_predict"], [2, 2, 1, "", "fit_transform"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "transform"]], "SocialED.detector.hypersed.Preprocessor": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "construct_graph"], [2, 2, 1, "", "construct_graph_all"], [2, 2, 1, "", "get_best_threshold"], [2, 2, 1, "", "get_set_messages_embeddings"], [2, 2, 1, "", "get_set_test_df"], [2, 2, 1, "", "preprocess"], [2, 2, 1, "", "split_and_save_masks"]], "SocialED.detector.hypersed.SE": [[2, 2, 1, "", "add_isolates"], [2, 2, 1, "", "calc_1dSE"], [2, 2, 1, "", "calc_2dSE"], [2, 2, 1, "", "get_cut"], [2, 2, 1, "", "get_vol"], [2, 2, 1, "", "get_volume"], [2, 2, 1, "", "init_division"], [2, 2, 1, "", "print_graph"], [2, 2, 1, "", "show_division"], [2, 2, 1, "", "show_struc_data"], [2, 2, 1, "", "show_struc_data_2d"], [2, 2, 1, "", "update_1dSE"], [2, 2, 1, "", "update_division_MinSE"], [2, 2, 1, "", "update_struc_data"], [2, 2, 1, "", "update_struc_data_2d"]], "SocialED.detector.hypersed.SingleBlockData": [[2, 4, 1, "", "adj"], [2, 4, 1, "", "anchor_ass"], [2, 4, 1, "", "anchor_edge_index_types"], [2, 4, 1, "", "anchor_feature"], [2, 4, 1, "", "anchor_labels"], [2, 4, 1, "", "edge_index_types"], [2, 4, 1, "", "feature"], [2, 4, 1, "", "labels"], [2, 4, 1, "", "num_anchors"], [2, 4, 1, "", "num_classes"], [2, 4, 1, "", "num_features"], [2, 4, 1, "", "num_nodes"]], "SocialED.detector.hypersed.Trainer": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "getGAEPre"], [2, 2, 1, "", "getNTBlockData"], [2, 2, 1, "", "getOtherByedge"], [2, 2, 1, "", "offline_train"], [2, 2, 1, "", "test"]], "SocialED.detector.hypersed.TwitterDataSet": [[2, 2, 1, "", "get_data"], [2, 2, 1, "", "init_incr_data"]], "SocialED.detector.hypersed.Views": [[2, 4, 1, "", "all"], [2, 4, 1, "", "entity"], [2, 4, 1, "", "userid"], [2, 4, 1, "", "word"]], "SocialED.detector.hypersed.cluster_metrics": [[2, 2, 1, "", "clusterAcc"], [2, 2, 1, "", "evaluateFromLabel"], [2, 2, 1, "", "get_new_predicts"]], "SocialED.detector.kpgnn": [[2, 1, 1, "", "AccumulatedAccuracyMetric"], [2, 1, 1, "", "AverageNonzeroTripletsMetric"], [2, 1, 1, "", "AvgReadout"], [2, 1, 1, "", "DGI"], [2, 1, 1, "", "Discriminator"], [2, 1, 1, "", "FunctionNegativeTripletSelector"], [2, 1, 1, "", "GAT"], [2, 1, 1, "", "GATLayer"], [2, 3, 1, "", "HardestNegativeTripletSelector"], [2, 1, 1, "", "KPGNN"], [2, 1, 1, "", "KPGNN_model"], [2, 1, 1, "", "Metric"], [2, 1, 1, "", "MultiHeadGATLayer"], [2, 1, 1, "", "OnlineTripletLoss"], [2, 1, 1, "", "Preprocessor"], [2, 3, 1, "", "RandomNegativeTripletSelector"], [2, 1, 1, "", "SocialDataset"], [2, 1, 1, "", "TripletSelector"], [2, 3, 1, "", "evaluate_model"], [2, 3, 1, "", "extract_embeddings"], [2, 3, 1, "", "generateMasks"], [2, 3, 1, "", "graph_statistics"], [2, 3, 1, "", "hardest_negative"], [2, 3, 1, "", "intersection"], [2, 3, 1, "", "pdist"], [2, 3, 1, "", "random_hard_negative"], [2, 3, 1, "", "run_kmeans"], [2, 3, 1, "", "save_embeddings"]], "SocialED.detector.kpgnn.AccumulatedAccuracyMetric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.kpgnn.AverageNonzeroTripletsMetric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.kpgnn.AvgReadout": [[2, 2, 1, "", "forward"]], "SocialED.detector.kpgnn.DGI": [[2, 2, 1, "", "embed"], [2, 2, 1, "", "forward"]], "SocialED.detector.kpgnn.Discriminator": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "weights_init"]], "SocialED.detector.kpgnn.FunctionNegativeTripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.kpgnn.GAT": [[2, 2, 1, "", "forward"]], "SocialED.detector.kpgnn.GATLayer": [[2, 2, 1, "", "edge_attention"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "message_func"], [2, 2, 1, "", "reduce_func"], [2, 2, 1, "", "reset_parameters"]], "SocialED.detector.kpgnn.KPGNN": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.kpgnn.KPGNN_model": [[2, 2, 1, "", "infer"], [2, 2, 1, "", "initial_maintain"]], "SocialED.detector.kpgnn.Metric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.kpgnn.MultiHeadGATLayer": [[2, 2, 1, "", "forward"]], "SocialED.detector.kpgnn.OnlineTripletLoss": [[2, 2, 1, "", "forward"]], "SocialED.detector.kpgnn.Preprocessor": [[2, 2, 1, "", "construct_graph_from_df"], [2, 2, 1, "", "construct_incremental_dataset"], [2, 2, 1, "", "custom_message_graph"], [2, 2, 1, "", "df_to_t_features"], [2, 2, 1, "", "documents_to_features"], [2, 2, 1, "", "extract_time_feature"], [2, 2, 1, "", "generate_initial_features"], [2, 2, 1, "", "networkx_to_dgl_graph"]], "SocialED.detector.kpgnn.SocialDataset": [[2, 2, 1, "", "load_adj_matrix"], [2, 2, 1, "", "remove_obsolete_nodes"]], "SocialED.detector.kpgnn.TripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.lda": [[2, 1, 1, "", "LDA"]], "SocialED.detector.lda.LDA": [[2, 2, 1, "", "create_corpus"], [2, 2, 1, "", "detection"], [2, 2, 1, "", "display_topics"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "load_model"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.qsgnn": [[2, 1, 1, "", "AccumulatedAccuracyMetric"], [2, 1, 1, "", "Arabic_preprocessor"], [2, 1, 1, "", "AverageNonzeroTripletsMetric"], [2, 1, 1, "", "EDNN"], [2, 1, 1, "", "FunctionNegativeTripletSelector"], [2, 1, 1, "", "GAT"], [2, 1, 1, "", "GATLayer"], [2, 3, 1, "", "HardestNegativeTripletSelector"], [2, 1, 1, "", "Metric"], [2, 1, 1, "", "MultiHeadGATLayer"], [2, 1, 1, "", "OnlineTripletLoss"], [2, 1, 1, "", "Preprocessor"], [2, 1, 1, "", "QSGNN"], [2, 3, 1, "", "RandomNegativeTripletSelector"], [2, 1, 1, "", "SocialDataset"], [2, 1, 1, "", "TripletSelector"], [2, 3, 1, "", "continue_train"], [2, 3, 1, "", "edl_digamma_loss"], [2, 3, 1, "", "edl_log_loss"], [2, 3, 1, "", "edl_loss"], [2, 3, 1, "", "edl_mse_loss"], [2, 3, 1, "", "evaluate"], [2, 3, 1, "", "exp_evidence"], [2, 3, 1, "", "extract_embeddings"], [2, 3, 1, "", "generateMasks"], [2, 3, 1, "", "getdata"], [2, 3, 1, "", "graph_statistics"], [2, 3, 1, "", "hardest_negative"], [2, 3, 1, "", "initial_train"], [2, 3, 1, "", "intersection"], [2, 3, 1, "", "kl_divergence"], [2, 3, 1, "", "loglikelihood_loss"], [2, 3, 1, "", "mse_loss"], [2, 3, 1, "", "pairwise_sample"], [2, 3, 1, "", "pdist"], [2, 3, 1, "", "print_scores"], [2, 3, 1, "", "random_hard_negative"], [2, 3, 1, "", "relu_evidence"], [2, 3, 1, "", "run_kmeans"], [2, 1, 1, "", "simNN"], [2, 3, 1, "", "softplus_evidence"]], "SocialED.detector.qsgnn.AccumulatedAccuracyMetric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.qsgnn.Arabic_preprocessor": [[2, 2, 1, "", "clean_text"]], "SocialED.detector.qsgnn.AverageNonzeroTripletsMetric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.qsgnn.EDNN": [[2, 2, 1, "", "forward"]], "SocialED.detector.qsgnn.FunctionNegativeTripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.qsgnn.GAT": [[2, 2, 1, "", "forward"]], "SocialED.detector.qsgnn.GATLayer": [[2, 2, 1, "", "edge_attention"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "message_func"], [2, 2, 1, "", "reduce_func"], [2, 2, 1, "", "reset_parameters"]], "SocialED.detector.qsgnn.Metric": [[2, 2, 1, "", "name"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "value"]], "SocialED.detector.qsgnn.MultiHeadGATLayer": [[2, 2, 1, "", "forward"]], "SocialED.detector.qsgnn.OnlineTripletLoss": [[2, 2, 1, "", "forward"]], "SocialED.detector.qsgnn.Preprocessor": [[2, 2, 1, "", "construct_graph"], [2, 2, 1, "", "construct_graph_from_df"], [2, 2, 1, "", "construct_incremental_dataset"], [2, 2, 1, "", "df_to_t_features"], [2, 2, 1, "", "documents_to_features"], [2, 2, 1, "", "extract_time_feature"], [2, 2, 1, "", "generate_initial_features"], [2, 2, 1, "", "networkx_to_dgl_graph"]], "SocialED.detector.qsgnn.QSGNN": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.qsgnn.SocialDataset": [[2, 2, 1, "", "load_adj_matrix"], [2, 2, 1, "", "remove_obsolete_nodes"]], "SocialED.detector.qsgnn.TripletSelector": [[2, 2, 1, "", "get_triplets"]], "SocialED.detector.qsgnn.simNN": [[2, 2, 1, "", "forward"]], "SocialED.detector.rplmsed": [[2, 1, 1, "", "CkptWrapper"], [2, 1, 1, "", "DataItem"], [2, 1, 1, "", "PairPfxTuningEncoder"], [2, 1, 1, "", "Preprocessor"], [2, 1, 1, "", "RPLMSED"], [2, 1, 1, "", "StructAttention"], [2, 3, 1, "", "batch_to_tensor"], [2, 3, 1, "", "calculate_average_min_score"], [2, 3, 1, "", "count_condition"], [2, 3, 1, "", "create_data_generator"], [2, 3, 1, "", "create_evaluator"], [2, 3, 1, "", "create_tester"], [2, 3, 1, "", "create_trainer"], [2, 3, 1, "", "data_generator"], [2, 3, 1, "", "encode_samples"], [2, 3, 1, "", "get_model"], [2, 3, 1, "", "get_model_state"], [2, 3, 1, "", "initialize"], [2, 3, 1, "", "load_ckpt"], [2, 3, 1, "", "load_data_blocks"], [2, 3, 1, "", "pad_seq"], [2, 3, 1, "", "print_scores"], [2, 3, 1, "", "print_table"], [2, 3, 1, "", "run_dbscan"], [2, 3, 1, "", "run_hdbscan"], [2, 3, 1, "", "run_kmeans"], [2, 3, 1, "", "start_run"], [2, 3, 1, "", "test_on_block"], [2, 3, 1, "", "train_on_block"], [2, 3, 1, "", "width"]], "SocialED.detector.rplmsed.CkptWrapper": [[2, 2, 1, "", "state_dict"]], "SocialED.detector.rplmsed.DataItem": [[2, 4, 1, "", "created_at"], [2, 4, 1, "", "entities"], [2, 4, 1, "", "event_id"], [2, 4, 1, "", "filtered_words"], [2, 4, 1, "", "hashtags"], [2, 4, 1, "", "text"], [2, 4, 1, "", "tweet_id"], [2, 4, 1, "", "urls"], [2, 4, 1, "", "user_id"], [2, 4, 1, "", "user_mentions"], [2, 4, 1, "", "words"]], "SocialED.detector.rplmsed.PairPfxTuningEncoder": [[2, 2, 1, "", "accumulate_reload_plm"], [2, 2, 1, "", "feat_size"], [2, 2, 1, "", "fix_plm"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "reload_plm"]], "SocialED.detector.rplmsed.Preprocessor": [[2, 2, 1, "", "build_creat_at_adj"], [2, 2, 1, "", "build_entity_adj"], [2, 2, 1, "", "build_feat_adj"], [2, 2, 1, "", "build_feats_adj"], [2, 2, 1, "", "build_hashtag_adj"], [2, 2, 1, "", "build_user_adj"], [2, 2, 1, "", "build_words_adj"], [2, 2, 1, "", "get_time_relation"], [2, 2, 1, "", "make_ref_samples"], [2, 2, 1, "", "make_train_samples"], [2, 2, 1, "", "pre_process"], [2, 2, 1, "", "preprocess_all"], [2, 2, 1, "", "process_block"], [2, 2, 1, "", "split_into_blocks"], [2, 2, 1, "", "split_train_test_validation"], [2, 2, 1, "", "to_sparse_matrix"], [2, 2, 1, "", "tweet_to_event"]], "SocialED.detector.rplmsed.RPLMSED": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.rplmsed.StructAttention": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "forward"]], "SocialED.detector.sbert": [[2, 1, 1, "", "SBERT"]], "SocialED.detector.sbert.SBERT": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "get_sbert_embeddings"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.uclsed": [[2, 3, 1, "", "DS_Combin"], [2, 1, 1, "", "EDNN"], [2, 3, 1, "", "EUC_loss"], [2, 1, 1, "", "GNN"], [2, 1, 1, "", "Preprocessor"], [2, 1, 1, "", "Tem_Agg_Layer"], [2, 1, 1, "", "UCLSED"], [2, 1, 1, "", "UCLSED_model"], [2, 3, 1, "", "ava_split_data"], [2, 3, 1, "", "common_loss"], [2, 3, 1, "", "edl_digamma_loss"], [2, 3, 1, "", "edl_log_loss"], [2, 3, 1, "", "edl_loss"], [2, 3, 1, "", "edl_mse_loss"], [2, 3, 1, "", "exp_evidence"], [2, 3, 1, "", "extract_results"], [2, 3, 1, "", "get_dgl_data"], [2, 3, 1, "", "graph_statistics"], [2, 3, 1, "", "kl_divergence"], [2, 3, 1, "", "kl_pred_divergence"], [2, 3, 1, "", "loglikelihood_loss"], [2, 3, 1, "", "make_onehot"], [2, 3, 1, "", "mse_loss"], [2, 3, 1, "", "relu_evidence"], [2, 3, 1, "", "softplus_evidence"], [2, 3, 1, "", "split_data"], [2, 3, 1, "", "train_model"]], "SocialED.detector.uclsed.EDNN": [[2, 2, 1, "", "forward"]], "SocialED.detector.uclsed.GNN": [[2, 2, 1, "", "calculate_attention"], [2, 2, 1, "", "edge_attention"], [2, 2, 1, "", "forward"]], "SocialED.detector.uclsed.Preprocessor": [[2, 2, 1, "", "construct_graph"], [2, 2, 1, "", "construct_graph_base_eles"], [2, 2, 1, "", "get_nlp"], [2, 2, 1, "", "load_data"], [2, 2, 1, "", "str2list"]], "SocialED.detector.uclsed.Tem_Agg_Layer": [[2, 2, 1, "", "edge_attention"], [2, 2, 1, "", "forward"], [2, 2, 1, "", "message_func"], [2, 2, 1, "", "reduce_func"], [2, 2, 1, "", "reset_parameters"]], "SocialED.detector.uclsed.UCLSED": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.uclsed.UCLSED_model": [[2, 2, 1, "", "forward"]], "SocialED.detector.wmd": [[2, 1, 1, "", "WMD"], [2, 3, 1, "", "process_document"]], "SocialED.detector.wmd.WMD": [[2, 2, 1, "", "_save_results"], [2, 2, 1, "", "detection"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "preprocess"]], "SocialED.detector.word2vec": [[2, 1, 1, "", "WORD2VEC"]], "SocialED.detector.word2vec.WORD2VEC": [[2, 2, 1, "", "detection"], [2, 2, 1, "", "document_vector"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "load_model"], [2, 2, 1, "", "preprocess"]], "SocialED.metrics": [[3, 0, 0, "-", "metric"]], "SocialED.metrics.metric": [[3, 3, 1, "", "eval_acc"], [3, 3, 1, "", "eval_ami"], [3, 3, 1, "", "eval_ari"], [3, 3, 1, "", "eval_f1"], [3, 3, 1, "", "eval_nmi"]], "SocialED.utils": [[0, 0, 0, "-", "dataprocess"], [4, 0, 0, "-", "utility"]], "SocialED.utils.dataprocess": [[0, 3, 1, "", "check_class_sizes"], [0, 3, 1, "", "construct_graph"], [0, 3, 1, "", "df_to_t_features"], [0, 3, 1, "", "extract_time_feature"], [0, 3, 1, "", "get_word2id_emb"], [0, 3, 1, "", "graph_statistics"], [0, 3, 1, "", "load_data"]], "SocialED.utils.utility": [[4, 3, 1, "", "DS_Combin"], [4, 3, 1, "", "SBERT_embed"], [4, 3, 1, "", "check_parameter"], [4, 3, 1, "", "currentTime"], [4, 3, 1, "", "graph_statistics"], [4, 3, 1, "", "pairwise_sample"], [4, 3, 1, "", "pprint"], [4, 3, 1, "", "sim"], [4, 3, 1, "", "tokenize_text"], [4, 3, 1, "", "validate_device"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"social": [0, 1, 2, 3, 4, 6], "dataset": 1, "dataload": 1, "detector": 2, "lda": 2, "bilstm": 2, "word2vec": 2, "glove": 2, "wmd": 2, "sbert": 2, "eventx": 2, "clkd": 2, "kpgnn": 2, "finev": 2, "qsgnn": 2, "hcrc": 2, "ucls": 2, "rplmsed": 2, "hisev": 2, "adpsemev": 2, "modul": [], "content": [], "metric": 3, "util": [4, 6], "cite": 5, "kei": 6, "featur": 6, "implement": 6, "algorithm": 6, "modular": 6, "design": 6, "function": 6, "librari": 6, "robust": 6, "access": 6, "qualiti": 6, "reliabl": 6, "commun": 6, "support": 6, "instal": 7, "refer": 8, "comput": [9, 13], "time": [9, 13], "core": 10, "team": 10, "section": 11, "1": 11, "data": 11, "prepar": 11, "A": 12, "blitz": 12, "introduct": 12, "bert": 2, "dataprocess": 0, "hypers": 2, "loss": []}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 58}, "alltitles": {"SocialED.dataprocess": [[0, "socialed-dataprocess"]], "dataprocess": [[0, "module-SocialED.utils.dataprocess"]], "SocialED.dataset": [[1, "socialed-dataset"]], "Dataloader": [[1, "module-SocialED.dataset.dataloader"]], "SocialED.metrics": [[3, "socialed-metrics"]], "metrics": [[3, "module-SocialED.metrics.metric"]], "SocialED.utils": [[4, "socialed-utils"]], "utility": [[4, "module-SocialED.utils.utility"]], "Cite": [[5, "cite"]], "Installation": [[7, "installation"]], "References": [[8, "references"]], "Computation times": [[9, "computation-times"], [13, "computation-times"]], "Core Team": [[10, "core-team"]], "Section 1: Data Preparation": [[11, "section-1-data-preparation"]], "A Blitz Introduction": [[12, "a-blitz-introduction"]], "SocialED": [[6, "socialed"]], "Key Features": [[6, "key-features"]], "Implemented Algorithms": [[6, "implemented-algorithms"]], "Modular Design and Utility Functions": [[6, "modular-design-and-utility-functions"]], "Library Robustness and Accessibility": [[6, "library-robustness-and-accessibility"]], "Quality and Reliability": [[6, "quality-and-reliability"]], "Accessibility and Community Support": [[6, "accessibility-and-community-support"]], "SocialED.detector": [[2, "socialed-detector"]], "LDA": [[2, "module-SocialED.detector.lda"]], "BiLSTM": [[2, "module-SocialED.detector.bilstm"]], "Word2Vec": [[2, "module-SocialED.detector.word2vec"]], "GloVe": [[2, "module-SocialED.detector.glove"]], "WMD": [[2, "module-SocialED.detector.wmd"]], "Bert": [[2, "bert"]], "SBert": [[2, "module-SocialED.detector.sbert"]], "EventX": [[2, "module-SocialED.detector.eventx"]], "CLKD": [[2, "module-SocialED.detector.clkd"]], "KPGNN": [[2, "module-SocialED.detector.kpgnn"]], "FinEvent": [[2, "module-SocialED.detector.finevent"]], "QSGNN": [[2, "module-SocialED.detector.qsgnn"]], "HCRC": [[2, "module-SocialED.detector.hcrc"]], "UCLSED": [[2, "module-SocialED.detector.uclsed"]], "RPLMSED": [[2, "module-SocialED.detector.rplmsed"]], "HISEvent": [[2, "module-SocialED.detector.hisevent"]], "ADPSEMEvent": [[2, "module-SocialED.detector.adpsemevent"]], "Hypersed": [[2, "module-SocialED.detector.hypersed"]]}, "indexentries": {"adpsemevent (class in socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.ADPSEMEvent"]], "accumulatedaccuracymetric (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.AccumulatedAccuracyMetric"]], "accumulatedaccuracymetric (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.AccumulatedAccuracyMetric"]], "accumulatedaccuracymetric (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.AccumulatedAccuracyMetric"]], "accumulatedaccuracymetric (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.AccumulatedAccuracyMetric"]], "actorcritic (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.ActorCritic"]], "arabic_preprocessor (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.Arabic_preprocessor"]], "arabic_preprocessor (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.Arabic_preprocessor"]], "artanh (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Artanh"]], "averagenonzerotripletsmetric (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.AverageNonzeroTripletsMetric"]], "averagenonzerotripletsmetric (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.AverageNonzeroTripletsMetric"]], "averagenonzerotripletsmetric (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.AverageNonzeroTripletsMetric"]], "averagenonzerotripletsmetric (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.AverageNonzeroTripletsMetric"]], "avgreadout (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.AvgReadout"]], "avgreadout (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.AvgReadout"]], "basebuffer (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.BaseBuffer"]], "bilstm (class in socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.BiLSTM"]], "clkd (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.CLKD"]], "cnnencoder (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.CNNEncoder"]], "ckptwrapper (class in socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.CkptWrapper"]], "dgi (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.DGI"]], "dqn (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.DQN"]], "dqn_config (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.DQN_Config"]], "drl_cluster() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.DRL_cluster"]], "dsidata (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.DSIData"]], "ds_combin() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.DS_Combin"]], "dataitem (class in socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.DataItem"]], "datapartition (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.DataPartition"]], "dataset (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Dataset"]], "discriminator (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.Discriminator"]], "discriminator (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.Discriminator"]], "ednn (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.EDNN"]], "ednn (class in socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.EDNN"]], "ema (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.EMA"]], "euc_loss() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.EUC_loss"]], "edgeindextypes (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.EdgeIndexTypes"]], "encoder (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.Encoder"]], "eventx (class in socialed.detector.eventx)": [[2, "SocialED.detector.eventx.EventX"]], "fermidiracdecoder (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.FermiDiracDecoder"]], "finevent (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.FinEvent"]], "finevent_model (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.FinEvent_model"]], "frechet_mean() (socialed.detector.hypersed.lorentz method)": [[2, "SocialED.detector.hypersed.Lorentz.Frechet_mean"]], "frechet_mean() (socialed.detector.hypersed.poincare method)": [[2, "SocialED.detector.hypersed.Poincare.Frechet_mean"]], "frechet_mean_poincare() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Frechet_mean_poincare"]], "functionnegativetripletselector (class in socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.FunctionNegativeTripletSelector"]], "functionnegativetripletselector (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.FunctionNegativeTripletSelector"]], "functionnegativetripletselector (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.FunctionNegativeTripletSelector"]], "functionnegativetripletselector (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.FunctionNegativeTripletSelector"]], "functionnegativetripletselector (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.FunctionNegativeTripletSelector"]], "gat (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.GAT"]], "gat (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.GAT"]], "gat (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.GAT"]], "gat (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.GAT"]], "gatlayer (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.GATLayer"]], "gatlayer (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.GATLayer"]], "gatlayer (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.GATLayer"]], "gnn (class in socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.GNN"]], "glove (class in socialed.detector.glove)": [[2, "SocialED.detector.glove.GloVe"]], "graphencoder (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.GraphEncoder"]], "graphlevel (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.GraphLevel"]], "graph_modeltrainer (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.Graph_ModelTrainer"]], "hcrc (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.HCRC"]], "hisevent (class in socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.HISEvent"]], "hardestnegativetripletselector() (in module socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.HardestNegativeTripletSelector"]], "hardestnegativetripletselector() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.HardestNegativeTripletSelector"]], "hardestnegativetripletselector() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.HardestNegativeTripletSelector"]], "hardestnegativetripletselector() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.HardestNegativeTripletSelector"]], "hardestnegativetripletselector() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.HardestNegativeTripletSelector"]], "hypergraphautoencoder (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.HyperGraphAutoEncoder"]], "hyperse (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.HyperSE"]], "hypersed (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.HyperSED"]], "inter_agg (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.Inter_AGG"]], "intra_agg (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.Intra_AGG"]], "kpgnn (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.KPGNN"]], "kpgnn_model (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.KPGNN_model"]], "lda (class in socialed.detector.lda)": [[2, "SocialED.detector.lda.LDA"]], "lsenet (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.LSENet"]], "lsenetlayer (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.LSENetLayer"]], "lstm (class in socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.LSTM"]], "l_conv() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.L_ConV"]], "lorentz (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Lorentz"]], "lorentzagg (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.LorentzAgg"]], "lorentzassignment (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.LorentzAssignment"]], "lorentzgraphconvolution (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.LorentzGraphConvolution"]], "lorentzlinear (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.LorentzLinear"]], "mlpencoder (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.MLPEncoder"]], "margnn (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.MarGNN"]], "metric (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.Metric"]], "metric (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.Metric"]], "metric (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.Metric"]], "metric (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.Metric"]], "multiheadgatlayer (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.MultiHeadGATLayer"]], "multiheadgatlayer (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.MultiHeadGATLayer"]], "multiheadgatlayer (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.MultiHeadGATLayer"]], "mysampler (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.MySampler"]], "nmi_cluster() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.NMI_cluster"]], "node (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Node"]], "nodelevel (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.NodeLevel"]], "node_modeltrainer (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.Node_ModelTrainer"]], "onlinetripletloss (class in socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.OnlineTripletLoss"]], "onlinetripletloss (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.OnlineTripletLoss"]], "onlinetripletloss (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.OnlineTripletLoss"]], "onlinetripletloss (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.OnlineTripletLoss"]], "onlinetripletloss (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.OnlineTripletLoss"]], "ppo (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.PPO"]], "ppo_config (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.PPO_Config"]], "pairpfxtuningencoder (class in socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.PairPfxTuningEncoder"]], "poincare (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Poincare"]], "poincarekmeans (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.PoincareKMeans"]], "preprocessor (class in socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.Preprocessor"]], "preprocessor (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.Preprocessor"]], "preprocessor (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.Preprocessor"]], "preprocessor (class in socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.Preprocessor"]], "preprocessor (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Preprocessor"]], "preprocessor (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.Preprocessor"]], "preprocessor (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.Preprocessor"]], "preprocessor (class in socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.Preprocessor"]], "preprocessor (class in socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.Preprocessor"]], "qnet (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.QNet"]], "qsgnn (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.QSGNN"]], "rl_neighbor_filter() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.RL_neighbor_filter"]], "rl_neighbor_filter_full() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.RL_neighbor_filter_full"]], "rplmsed (class in socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.RPLMSED"]], "randomnegativetripletselector() (in module socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.RandomNegativeTripletSelector"]], "randomnegativetripletselector() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.RandomNegativeTripletSelector"]], "randomnegativetripletselector() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.RandomNegativeTripletSelector"]], "randomnegativetripletselector() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.RandomNegativeTripletSelector"]], "randomnegativetripletselector() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.RandomNegativeTripletSelector"]], "sbert (class in socialed.detector.sbert)": [[2, "SocialED.detector.sbert.SBERT"]], "sbert_embed() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.SBERT_embed"]], "sbert_embed() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.SBERT_embed"]], "sbert_embed() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.SBERT_embed"]], "se (class in socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.SE"]], "se (class in socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.SE"]], "se (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.SE"]], "singleblockdata (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.SingleBlockData"]], "singlepass (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.SinglePass"]], "socialdataset (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.SocialDataset"]], "socialdataset (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.SocialDataset"]], "socialdataset (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.SocialDataset"]], "socialed.detector.adpsemevent": [[2, "module-SocialED.detector.adpsemevent"]], "socialed.detector.bilstm": [[2, "module-SocialED.detector.bilstm"]], "socialed.detector.clkd": [[2, "module-SocialED.detector.clkd"]], "socialed.detector.eventx": [[2, "module-SocialED.detector.eventx"]], "socialed.detector.finevent": [[2, "module-SocialED.detector.finevent"]], "socialed.detector.glove": [[2, "module-SocialED.detector.glove"]], "socialed.detector.hcrc": [[2, "module-SocialED.detector.hcrc"]], "socialed.detector.hisevent": [[2, "module-SocialED.detector.hisevent"]], "socialed.detector.hypersed": [[2, "module-SocialED.detector.hypersed"]], "socialed.detector.kpgnn": [[2, "module-SocialED.detector.kpgnn"]], "socialed.detector.lda": [[2, "module-SocialED.detector.lda"]], "socialed.detector.qsgnn": [[2, "module-SocialED.detector.qsgnn"]], "socialed.detector.rplmsed": [[2, "module-SocialED.detector.rplmsed"]], "socialed.detector.sbert": [[2, "module-SocialED.detector.sbert"]], "socialed.detector.uclsed": [[2, "module-SocialED.detector.uclsed"]], "socialed.detector.wmd": [[2, "module-SocialED.detector.wmd"]], "socialed.detector.word2vec": [[2, "module-SocialED.detector.word2vec"]], "structattention (class in socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.StructAttention"]], "tem_agg_layer (class in socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.Tem_Agg_Layer"]], "trainer (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Trainer"]], "tripletselector (class in socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.TripletSelector"]], "tripletselector (class in socialed.detector.clkd)": [[2, "SocialED.detector.clkd.TripletSelector"]], "tripletselector (class in socialed.detector.finevent)": [[2, "SocialED.detector.finevent.TripletSelector"]], "tripletselector (class in socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.TripletSelector"]], "tripletselector (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.TripletSelector"]], "twitterdataset (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.TwitterDataSet"]], "uclsed (class in socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.UCLSED"]], "uclsed_model (class in socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.UCLSED_model"]], "vectorizedata (class in socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.VectorizeData"]], "views (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.Views"]], "wmd (class in socialed.detector.wmd)": [[2, "SocialED.detector.wmd.WMD"]], "word2vec (class in socialed.detector.word2vec)": [[2, "SocialED.detector.word2vec.WORD2VEC"]], "__init__() (socialed.detector.adpsemevent.preprocessor method)": [[2, "SocialED.detector.adpsemevent.Preprocessor.__init__"]], "__init__() (socialed.detector.hisevent.preprocessor method)": [[2, "SocialED.detector.hisevent.Preprocessor.__init__"]], "__init__() (socialed.detector.hypersed.preprocessor method)": [[2, "SocialED.detector.hypersed.Preprocessor.__init__"]], "__init__() (socialed.detector.rplmsed.structattention method)": [[2, "SocialED.detector.rplmsed.StructAttention.__init__"]], "_save_results() (socialed.detector.wmd.wmd method)": [[2, "SocialED.detector.wmd.WMD._save_results"]], "accumulate_reload_plm() (socialed.detector.rplmsed.pairpfxtuningencoder method)": [[2, "SocialED.detector.rplmsed.PairPfxTuningEncoder.accumulate_reload_plm"]], "act() (socialed.detector.hcrc.actorcritic method)": [[2, "SocialED.detector.hcrc.ActorCritic.act"]], "add() (socialed.detector.hcrc.basebuffer method)": [[2, "SocialED.detector.hcrc.BaseBuffer.add"]], "add_buffer() (socialed.detector.hcrc.dqn method)": [[2, "SocialED.detector.hcrc.DQN.add_buffer"]], "add_buffer() (socialed.detector.hcrc.ppo method)": [[2, "SocialED.detector.hcrc.PPO.add_buffer"]], "add_isolates() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.add_isolates"]], "add_isolates() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.add_isolates"]], "add_isolates() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.add_isolates"]], "adj (socialed.detector.hypersed.dsidata attribute)": [[2, "SocialED.detector.hypersed.DSIData.adj"]], "adj (socialed.detector.hypersed.edgeindextypes attribute)": [[2, "SocialED.detector.hypersed.EdgeIndexTypes.adj"]], "adj (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.adj"]], "adjacency2index() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.adjacency2index"]], "all (socialed.detector.hypersed.views attribute)": [[2, "SocialED.detector.hypersed.Views.all"]], "anchor_ass (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.anchor_ass"]], "anchor_edge_index_types (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.anchor_edge_index_types"]], "anchor_feature (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.anchor_feature"]], "anchor_labels (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.anchor_labels"]], "artanh() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.artanh"]], "aug_edge() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.aug_edge"]], "ava_split_data() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.ava_split_data"]], "backward() (socialed.detector.hypersed.artanh static method)": [[2, "SocialED.detector.hypersed.Artanh.backward"]], "batch_to_tensor() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.batch_to_tensor"]], "build_creat_at_adj() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.build_creat_at_adj"]], "build_entity_adj() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.build_entity_adj"]], "build_feat_adj() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.build_feat_adj"]], "build_feats_adj() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.build_feats_adj"]], "build_hashtag_adj() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.build_hashtag_adj"]], "build_user_adj() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.build_user_adj"]], "build_words_adj() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.build_words_adj"]], "cal_auc_ap() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.cal_AUC_AP"]], "calc_1dse() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.calc_1dSE"]], "calc_1dse() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.calc_1dSE"]], "calc_1dse() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.calc_1dSE"]], "calc_2dse() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.calc_2dSE"]], "calc_2dse() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.calc_2dSE"]], "calc_2dse() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.calc_2dSE"]], "calculate_attention() (socialed.detector.uclsed.gnn method)": [[2, "SocialED.detector.uclsed.GNN.calculate_attention"]], "calculate_average_min_score() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.calculate_average_min_score"]], "calculate_nature_cnn_out_dim() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.calculate_nature_cnn_out_dim"]], "cinner() (socialed.detector.hypersed.lorentz method)": [[2, "SocialED.detector.hypersed.Lorentz.cinner"]], "classify_docs() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.classify_docs"]], "clean_text() (socialed.detector.clkd.arabic_preprocessor method)": [[2, "SocialED.detector.clkd.Arabic_preprocessor.clean_text"]], "clean_text() (socialed.detector.qsgnn.arabic_preprocessor method)": [[2, "SocialED.detector.qsgnn.Arabic_preprocessor.clean_text"]], "clear() (socialed.detector.hcrc.basebuffer method)": [[2, "SocialED.detector.hcrc.BaseBuffer.clear"]], "clusteracc() (socialed.detector.hypersed.cluster_metrics method)": [[2, "SocialED.detector.hypersed.cluster_metrics.clusterAcc"]], "cluster_metrics (class in socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.cluster_metrics"]], "clustering() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.clustering"]], "clustering_init() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.clustering_init"]], "common_loss() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.common_loss"]], "compute_argmin() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.compute_argmin"]], "config2string() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.config2string"]], "construct_dict() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.construct_dict"]], "construct_graph() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.construct_graph"]], "construct_graph() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.construct_graph"]], "construct_graph() (socialed.detector.hypersed.preprocessor method)": [[2, "SocialED.detector.hypersed.Preprocessor.construct_graph"]], "construct_graph() (socialed.detector.qsgnn.preprocessor method)": [[2, "SocialED.detector.qsgnn.Preprocessor.construct_graph"]], "construct_graph() (socialed.detector.uclsed.preprocessor method)": [[2, "SocialED.detector.uclsed.Preprocessor.construct_graph"]], "construct_graph() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.construct_graph"]], "construct_graph_all() (socialed.detector.hypersed.preprocessor method)": [[2, "SocialED.detector.hypersed.Preprocessor.construct_graph_all"]], "construct_graph_base_eles() (socialed.detector.uclsed.preprocessor method)": [[2, "SocialED.detector.uclsed.Preprocessor.construct_graph_base_eles"]], "construct_graph_from_df() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.construct_graph_from_df"]], "construct_graph_from_df() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.construct_graph_from_df"]], "construct_graph_from_df() (socialed.detector.kpgnn.preprocessor method)": [[2, "SocialED.detector.kpgnn.Preprocessor.construct_graph_from_df"]], "construct_graph_from_df() (socialed.detector.qsgnn.preprocessor method)": [[2, "SocialED.detector.qsgnn.Preprocessor.construct_graph_from_df"]], "construct_graph_from_df() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.construct_graph_from_df"]], "construct_incremental_dataset() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.construct_incremental_dataset"]], "construct_incremental_dataset() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.construct_incremental_dataset"]], "construct_incremental_dataset() (socialed.detector.kpgnn.preprocessor method)": [[2, "SocialED.detector.kpgnn.Preprocessor.construct_incremental_dataset"]], "construct_incremental_dataset() (socialed.detector.qsgnn.preprocessor method)": [[2, "SocialED.detector.qsgnn.Preprocessor.construct_incremental_dataset"]], "construct_kw_graph() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.construct_kw_graph"]], "construct_tree() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.construct_tree"]], "continue_train() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.continue_train"]], "contrastive_loss() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.contrastive_loss"]], "coo_trans() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.coo_trans"]], "count_condition() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.count_condition"]], "create_corpus() (socialed.detector.lda.lda method)": [[2, "SocialED.detector.lda.LDA.create_corpus"]], "create_data_generator() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.create_data_generator"]], "create_dataset() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.create_dataset"]], "create_evaluator() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.create_evaluator"]], "create_homodataset() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.create_homodataset"]], "create_multi_relational_graph() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.create_multi_relational_graph"]], "create_offline_homodataset() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.create_offline_homodataset"]], "create_process_closed_set() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.create_process_closed_set"]], "create_process_open_set() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.create_process_open_set"]], "create_tester() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.create_tester"]], "create_trainer() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.create_trainer"]], "create_vectors() (socialed.detector.glove.glove method)": [[2, "SocialED.detector.glove.GloVe.create_vectors"]], "created_at (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.created_at"]], "currenttime() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.currentTime"]], "custom_message_graph() (socialed.detector.kpgnn.preprocessor method)": [[2, "SocialED.detector.kpgnn.Preprocessor.custom_message_graph"]], "data (socialed.detector.hypersed.dataset attribute)": [[2, "SocialED.detector.hypersed.Dataset.data"]], "data_generator() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.data_generator"]], "decode() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.decode"]], "decode() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.decode"]], "decoding_cluster_from_tree() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.decoding_cluster_from_tree"]], "degrees (socialed.detector.hypersed.dsidata attribute)": [[2, "SocialED.detector.hypersed.DSIData.degrees"]], "degrees (socialed.detector.hypersed.edgeindextypes attribute)": [[2, "SocialED.detector.hypersed.EdgeIndexTypes.degrees"]], "detect_kw_communities() (in module socialed.detector.eventx)": [[2, "SocialED.detector.eventx.detect_kw_communities"]], "detect_kw_communities_iter() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.detect_kw_communities_iter"]], "detection() (socialed.detector.adpsemevent.adpsemevent method)": [[2, "SocialED.detector.adpsemevent.ADPSEMEvent.detection"]], "detection() (socialed.detector.bilstm.bilstm method)": [[2, "SocialED.detector.bilstm.BiLSTM.detection"]], "detection() (socialed.detector.clkd.clkd method)": [[2, "SocialED.detector.clkd.CLKD.detection"]], "detection() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.detection"]], "detection() (socialed.detector.finevent.finevent method)": [[2, "SocialED.detector.finevent.FinEvent.detection"]], "detection() (socialed.detector.glove.glove method)": [[2, "SocialED.detector.glove.GloVe.detection"]], "detection() (socialed.detector.hcrc.hcrc method)": [[2, "SocialED.detector.hcrc.HCRC.detection"]], "detection() (socialed.detector.hisevent.hisevent method)": [[2, "SocialED.detector.hisevent.HISEvent.detection"]], "detection() (socialed.detector.hypersed.hypersed method)": [[2, "SocialED.detector.hypersed.HyperSED.detection"]], "detection() (socialed.detector.hypersed.trainer method)": [[2, "SocialED.detector.hypersed.Trainer.detection"]], "detection() (socialed.detector.kpgnn.kpgnn method)": [[2, "SocialED.detector.kpgnn.KPGNN.detection"]], "detection() (socialed.detector.lda.lda method)": [[2, "SocialED.detector.lda.LDA.detection"]], "detection() (socialed.detector.qsgnn.qsgnn method)": [[2, "SocialED.detector.qsgnn.QSGNN.detection"]], "detection() (socialed.detector.rplmsed.rplmsed method)": [[2, "SocialED.detector.rplmsed.RPLMSED.detection"]], "detection() (socialed.detector.sbert.sbert method)": [[2, "SocialED.detector.sbert.SBERT.detection"]], "detection() (socialed.detector.uclsed.uclsed method)": [[2, "SocialED.detector.uclsed.UCLSED.detection"]], "detection() (socialed.detector.wmd.wmd method)": [[2, "SocialED.detector.wmd.WMD.detection"]], "detection() (socialed.detector.word2vec.word2vec method)": [[2, "SocialED.detector.word2vec.WORD2VEC.detection"]], "device (socialed.detector.hypersed.dsidata attribute)": [[2, "SocialED.detector.hypersed.DSIData.device"]], "df_to_t_features() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.df_to_t_features"]], "df_to_t_features() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.df_to_t_features"]], "df_to_t_features() (socialed.detector.kpgnn.preprocessor method)": [[2, "SocialED.detector.kpgnn.Preprocessor.df_to_t_features"]], "df_to_t_features() (socialed.detector.qsgnn.preprocessor method)": [[2, "SocialED.detector.qsgnn.Preprocessor.df_to_t_features"]], "df_to_t_features() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.df_to_t_features"]], "display_topics() (socialed.detector.lda.lda method)": [[2, "SocialED.detector.lda.LDA.display_topics"]], "document_vector() (socialed.detector.word2vec.word2vec method)": [[2, "SocialED.detector.word2vec.WORD2VEC.document_vector"]], "documents_to_features() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.documents_to_features"]], "documents_to_features() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.documents_to_features"]], "documents_to_features() (socialed.detector.kpgnn.preprocessor method)": [[2, "SocialED.detector.kpgnn.Preprocessor.documents_to_features"]], "documents_to_features() (socialed.detector.qsgnn.preprocessor method)": [[2, "SocialED.detector.qsgnn.Preprocessor.documents_to_features"]], "documents_to_features() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.documents_to_features"]], "edge_attention() (socialed.detector.clkd.gatlayer method)": [[2, "SocialED.detector.clkd.GATLayer.edge_attention"]], "edge_attention() (socialed.detector.kpgnn.gatlayer method)": [[2, "SocialED.detector.kpgnn.GATLayer.edge_attention"]], "edge_attention() (socialed.detector.qsgnn.gatlayer method)": [[2, "SocialED.detector.qsgnn.GATLayer.edge_attention"]], "edge_attention() (socialed.detector.uclsed.gnn method)": [[2, "SocialED.detector.uclsed.GNN.edge_attention"]], "edge_attention() (socialed.detector.uclsed.tem_agg_layer method)": [[2, "SocialED.detector.uclsed.Tem_Agg_Layer.edge_attention"]], "edge_index (socialed.detector.hypersed.dsidata attribute)": [[2, "SocialED.detector.hypersed.DSIData.edge_index"]], "edge_index (socialed.detector.hypersed.edgeindextypes attribute)": [[2, "SocialED.detector.hypersed.EdgeIndexTypes.edge_index"]], "edge_index_types (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.edge_index_types"]], "edl_digamma_loss() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.edl_digamma_loss"]], "edl_digamma_loss() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.edl_digamma_loss"]], "edl_log_loss() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.edl_log_loss"]], "edl_log_loss() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.edl_log_loss"]], "edl_loss() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.edl_loss"]], "edl_loss() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.edl_loss"]], "edl_mse_loss() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.edl_mse_loss"]], "edl_mse_loss() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.edl_mse_loss"]], "embed() (socialed.detector.kpgnn.dgi method)": [[2, "SocialED.detector.kpgnn.DGI.embed"]], "embedder (class in socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.embedder"]], "embedding (socialed.detector.hypersed.dataset attribute)": [[2, "SocialED.detector.hypersed.Dataset.embedding"]], "encode_samples() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.encode_samples"]], "entities (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.entities"]], "entity (socialed.detector.hypersed.views attribute)": [[2, "SocialED.detector.hypersed.Views.entity"]], "enumerateconfig() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.enumerateConfig"]], "epsilon_decay() (socialed.detector.hcrc.dqn method)": [[2, "SocialED.detector.hcrc.DQN.epsilon_decay"]], "evaluate() (socialed.detector.adpsemevent.adpsemevent method)": [[2, "SocialED.detector.adpsemevent.ADPSEMEvent.evaluate"]], "evaluate() (socialed.detector.bilstm.bilstm method)": [[2, "SocialED.detector.bilstm.BiLSTM.evaluate"]], "evaluate() (socialed.detector.clkd.clkd method)": [[2, "SocialED.detector.clkd.CLKD.evaluate"]], "evaluate() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.evaluate"]], "evaluate() (socialed.detector.finevent.finevent method)": [[2, "SocialED.detector.finevent.FinEvent.evaluate"]], "evaluate() (socialed.detector.glove.glove method)": [[2, "SocialED.detector.glove.GloVe.evaluate"]], "evaluate() (socialed.detector.hcrc.hcrc method)": [[2, "SocialED.detector.hcrc.HCRC.evaluate"]], "evaluate() (socialed.detector.hisevent.hisevent method)": [[2, "SocialED.detector.hisevent.HISEvent.evaluate"]], "evaluate() (socialed.detector.hypersed.hypersed method)": [[2, "SocialED.detector.hypersed.HyperSED.evaluate"]], "evaluate() (socialed.detector.kpgnn.kpgnn method)": [[2, "SocialED.detector.kpgnn.KPGNN.evaluate"]], "evaluate() (socialed.detector.lda.lda method)": [[2, "SocialED.detector.lda.LDA.evaluate"]], "evaluate() (socialed.detector.qsgnn.qsgnn method)": [[2, "SocialED.detector.qsgnn.QSGNN.evaluate"]], "evaluate() (socialed.detector.rplmsed.rplmsed method)": [[2, "SocialED.detector.rplmsed.RPLMSED.evaluate"]], "evaluate() (socialed.detector.sbert.sbert method)": [[2, "SocialED.detector.sbert.SBERT.evaluate"]], "evaluate() (socialed.detector.uclsed.uclsed method)": [[2, "SocialED.detector.uclsed.UCLSED.evaluate"]], "evaluate() (socialed.detector.wmd.wmd method)": [[2, "SocialED.detector.wmd.WMD.evaluate"]], "evaluate() (socialed.detector.word2vec.word2vec method)": [[2, "SocialED.detector.word2vec.WORD2VEC.evaluate"]], "evaluate() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.evaluate"]], "evaluate() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.evaluate"]], "evaluatefromlabel() (socialed.detector.hypersed.cluster_metrics method)": [[2, "SocialED.detector.hypersed.cluster_metrics.evaluateFromLabel"]], "evaluate_ac() (socialed.detector.hcrc.actorcritic method)": [[2, "SocialED.detector.hcrc.ActorCritic.evaluate_AC"]], "evaluate_fun() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.evaluate_fun"]], "evaluate_labels() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.evaluate_labels"]], "evaluate_model() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.evaluate_model"]], "evaluate_model() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.evaluate_model"]], "evaluate_model() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.evaluate_model"]], "event_id (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.event_id"]], "exp_evidence() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.exp_evidence"]], "exp_evidence() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.exp_evidence"]], "extract_embeddings() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.extract_embeddings"]], "extract_embeddings() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.extract_embeddings"]], "extract_embeddings() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.extract_embeddings"]], "extract_results() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.extract_results"]], "extract_time_feature() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.extract_time_feature"]], "extract_time_feature() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.extract_time_feature"]], "extract_time_feature() (socialed.detector.kpgnn.preprocessor method)": [[2, "SocialED.detector.kpgnn.Preprocessor.extract_time_feature"]], "extract_time_feature() (socialed.detector.qsgnn.preprocessor method)": [[2, "SocialED.detector.qsgnn.Preprocessor.extract_time_feature"]], "extract_time_feature() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.extract_time_feature"]], "feat_size() (socialed.detector.rplmsed.pairpfxtuningencoder method)": [[2, "SocialED.detector.rplmsed.PairPfxTuningEncoder.feat_size"]], "feature (socialed.detector.hypersed.dsidata attribute)": [[2, "SocialED.detector.hypersed.DSIData.feature"]], "feature (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.feature"]], "features (socialed.detector.hypersed.datapartition attribute)": [[2, "SocialED.detector.hypersed.DataPartition.features"]], "filtered_words (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.filtered_words"]], "fit() (socialed.detector.bilstm.bilstm method)": [[2, "SocialED.detector.bilstm.BiLSTM.fit"]], "fit() (socialed.detector.clkd.clkd method)": [[2, "SocialED.detector.clkd.CLKD.fit"]], "fit() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.fit"]], "fit() (socialed.detector.finevent.finevent method)": [[2, "SocialED.detector.finevent.FinEvent.fit"]], "fit() (socialed.detector.glove.glove method)": [[2, "SocialED.detector.glove.GloVe.fit"]], "fit() (socialed.detector.hcrc.hcrc method)": [[2, "SocialED.detector.hcrc.HCRC.fit"]], "fit() (socialed.detector.hypersed.hypersed method)": [[2, "SocialED.detector.hypersed.HyperSED.fit"]], "fit() (socialed.detector.hypersed.poincarekmeans method)": [[2, "SocialED.detector.hypersed.PoincareKMeans.fit"]], "fit() (socialed.detector.hypersed.trainer method)": [[2, "SocialED.detector.hypersed.Trainer.fit"]], "fit() (socialed.detector.kpgnn.kpgnn method)": [[2, "SocialED.detector.kpgnn.KPGNN.fit"]], "fit() (socialed.detector.lda.lda method)": [[2, "SocialED.detector.lda.LDA.fit"]], "fit() (socialed.detector.qsgnn.qsgnn method)": [[2, "SocialED.detector.qsgnn.QSGNN.fit"]], "fit() (socialed.detector.rplmsed.rplmsed method)": [[2, "SocialED.detector.rplmsed.RPLMSED.fit"]], "fit() (socialed.detector.sbert.sbert method)": [[2, "SocialED.detector.sbert.SBERT.fit"]], "fit() (socialed.detector.uclsed.uclsed method)": [[2, "SocialED.detector.uclsed.UCLSED.fit"]], "fit() (socialed.detector.wmd.wmd method)": [[2, "SocialED.detector.wmd.WMD.fit"]], "fit() (socialed.detector.word2vec.word2vec method)": [[2, "SocialED.detector.word2vec.WORD2VEC.fit"]], "fit_predict() (socialed.detector.hypersed.poincarekmeans method)": [[2, "SocialED.detector.hypersed.PoincareKMeans.fit_predict"]], "fit_transform() (socialed.detector.hypersed.poincarekmeans method)": [[2, "SocialED.detector.hypersed.PoincareKMeans.fit_transform"]], "fix_plm() (socialed.detector.rplmsed.pairpfxtuningencoder method)": [[2, "SocialED.detector.rplmsed.PairPfxTuningEncoder.fix_plm"]], "forward() (socialed.detector.bilstm.lstm method)": [[2, "SocialED.detector.bilstm.LSTM.forward"]], "forward() (socialed.detector.bilstm.onlinetripletloss method)": [[2, "SocialED.detector.bilstm.OnlineTripletLoss.forward"]], "forward() (socialed.detector.clkd.gat method)": [[2, "SocialED.detector.clkd.GAT.forward"]], "forward() (socialed.detector.clkd.gatlayer method)": [[2, "SocialED.detector.clkd.GATLayer.forward"]], "forward() (socialed.detector.clkd.multiheadgatlayer method)": [[2, "SocialED.detector.clkd.MultiHeadGATLayer.forward"]], "forward() (socialed.detector.clkd.onlinetripletloss method)": [[2, "SocialED.detector.clkd.OnlineTripletLoss.forward"]], "forward() (socialed.detector.finevent.avgreadout method)": [[2, "SocialED.detector.finevent.AvgReadout.forward"]], "forward() (socialed.detector.finevent.discriminator method)": [[2, "SocialED.detector.finevent.Discriminator.forward"]], "forward() (socialed.detector.finevent.gat method)": [[2, "SocialED.detector.finevent.GAT.forward"]], "forward() (socialed.detector.finevent.inter_agg method)": [[2, "SocialED.detector.finevent.Inter_AGG.forward"]], "forward() (socialed.detector.finevent.intra_agg method)": [[2, "SocialED.detector.finevent.Intra_AGG.forward"]], "forward() (socialed.detector.finevent.margnn method)": [[2, "SocialED.detector.finevent.MarGNN.forward"]], "forward() (socialed.detector.finevent.onlinetripletloss method)": [[2, "SocialED.detector.finevent.OnlineTripletLoss.forward"]], "forward() (socialed.detector.hcrc.actorcritic method)": [[2, "SocialED.detector.hcrc.ActorCritic.forward"]], "forward() (socialed.detector.hcrc.cnnencoder method)": [[2, "SocialED.detector.hcrc.CNNEncoder.forward"]], "forward() (socialed.detector.hcrc.encoder method)": [[2, "SocialED.detector.hcrc.Encoder.forward"]], "forward() (socialed.detector.hcrc.graphlevel method)": [[2, "SocialED.detector.hcrc.GraphLevel.forward"]], "forward() (socialed.detector.hcrc.mlpencoder method)": [[2, "SocialED.detector.hcrc.MLPEncoder.forward"]], "forward() (socialed.detector.hcrc.nodelevel method)": [[2, "SocialED.detector.hcrc.NodeLevel.forward"]], "forward() (socialed.detector.hcrc.qnet method)": [[2, "SocialED.detector.hcrc.QNet.forward"]], "forward() (socialed.detector.hypersed.artanh static method)": [[2, "SocialED.detector.hypersed.Artanh.forward"]], "forward() (socialed.detector.hypersed.fermidiracdecoder method)": [[2, "SocialED.detector.hypersed.FermiDiracDecoder.forward"]], "forward() (socialed.detector.hypersed.graphencoder method)": [[2, "SocialED.detector.hypersed.GraphEncoder.forward"]], "forward() (socialed.detector.hypersed.hypergraphautoencoder method)": [[2, "SocialED.detector.hypersed.HyperGraphAutoEncoder.forward"]], "forward() (socialed.detector.hypersed.hyperse method)": [[2, "SocialED.detector.hypersed.HyperSE.forward"]], "forward() (socialed.detector.hypersed.lsenet method)": [[2, "SocialED.detector.hypersed.LSENet.forward"]], "forward() (socialed.detector.hypersed.lsenetlayer method)": [[2, "SocialED.detector.hypersed.LSENetLayer.forward"]], "forward() (socialed.detector.hypersed.lorentzagg method)": [[2, "SocialED.detector.hypersed.LorentzAgg.forward"]], "forward() (socialed.detector.hypersed.lorentzassignment method)": [[2, "SocialED.detector.hypersed.LorentzAssignment.forward"]], "forward() (socialed.detector.hypersed.lorentzgraphconvolution method)": [[2, "SocialED.detector.hypersed.LorentzGraphConvolution.forward"]], "forward() (socialed.detector.hypersed.lorentzlinear method)": [[2, "SocialED.detector.hypersed.LorentzLinear.forward"]], "forward() (socialed.detector.hypersed.trainer method)": [[2, "SocialED.detector.hypersed.Trainer.forward"]], "forward() (socialed.detector.kpgnn.avgreadout method)": [[2, "SocialED.detector.kpgnn.AvgReadout.forward"]], "forward() (socialed.detector.kpgnn.dgi method)": [[2, "SocialED.detector.kpgnn.DGI.forward"]], "forward() (socialed.detector.kpgnn.discriminator method)": [[2, "SocialED.detector.kpgnn.Discriminator.forward"]], "forward() (socialed.detector.kpgnn.gat method)": [[2, "SocialED.detector.kpgnn.GAT.forward"]], "forward() (socialed.detector.kpgnn.gatlayer method)": [[2, "SocialED.detector.kpgnn.GATLayer.forward"]], "forward() (socialed.detector.kpgnn.multiheadgatlayer method)": [[2, "SocialED.detector.kpgnn.MultiHeadGATLayer.forward"]], "forward() (socialed.detector.kpgnn.onlinetripletloss method)": [[2, "SocialED.detector.kpgnn.OnlineTripletLoss.forward"]], "forward() (socialed.detector.qsgnn.ednn method)": [[2, "SocialED.detector.qsgnn.EDNN.forward"]], "forward() (socialed.detector.qsgnn.gat method)": [[2, "SocialED.detector.qsgnn.GAT.forward"]], "forward() (socialed.detector.qsgnn.gatlayer method)": [[2, "SocialED.detector.qsgnn.GATLayer.forward"]], "forward() (socialed.detector.qsgnn.multiheadgatlayer method)": [[2, "SocialED.detector.qsgnn.MultiHeadGATLayer.forward"]], "forward() (socialed.detector.qsgnn.onlinetripletloss method)": [[2, "SocialED.detector.qsgnn.OnlineTripletLoss.forward"]], "forward() (socialed.detector.qsgnn.simnn method)": [[2, "SocialED.detector.qsgnn.simNN.forward"]], "forward() (socialed.detector.rplmsed.pairpfxtuningencoder method)": [[2, "SocialED.detector.rplmsed.PairPfxTuningEncoder.forward"]], "forward() (socialed.detector.rplmsed.structattention method)": [[2, "SocialED.detector.rplmsed.StructAttention.forward"]], "forward() (socialed.detector.uclsed.ednn method)": [[2, "SocialED.detector.uclsed.EDNN.forward"]], "forward() (socialed.detector.uclsed.gnn method)": [[2, "SocialED.detector.uclsed.GNN.forward"]], "forward() (socialed.detector.uclsed.tem_agg_layer method)": [[2, "SocialED.detector.uclsed.Tem_Agg_Layer.forward"]], "forward() (socialed.detector.uclsed.uclsed_model method)": [[2, "SocialED.detector.uclsed.UCLSED_model.forward"]], "from_lorentz() (socialed.detector.hypersed.poincare method)": [[2, "SocialED.detector.hypersed.Poincare.from_lorentz"]], "from_poincare() (socialed.detector.hypersed.lorentz method)": [[2, "SocialED.detector.hypersed.Lorentz.from_poincare"]], "gen_offline_masks() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.gen_offline_masks"]], "generatemasks() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.generateMasks"]], "generatemasks() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.generateMasks"]], "generatemasks() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.generateMasks"]], "generatemasks() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.generateMasks"]], "generate_initial_features() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.generate_initial_features"]], "generate_initial_features() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.generate_initial_features"]], "generate_initial_features() (socialed.detector.kpgnn.preprocessor method)": [[2, "SocialED.detector.kpgnn.Preprocessor.generate_initial_features"]], "generate_initial_features() (socialed.detector.qsgnn.preprocessor method)": [[2, "SocialED.detector.qsgnn.Preprocessor.generate_initial_features"]], "geodesic_fn() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.geodesic_fn"]], "getc() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.getC"]], "getdata() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.getData"]], "getgaepre() (socialed.detector.hypersed.trainer method)": [[2, "SocialED.detector.hypersed.Trainer.getGAEPre"]], "getntblockdata() (socialed.detector.hypersed.trainer method)": [[2, "SocialED.detector.hypersed.Trainer.getNTBlockData"]], "getnewpredict() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.getNewPredict"]], "getotherbyedge() (socialed.detector.hypersed.trainer method)": [[2, "SocialED.detector.hypersed.Trainer.getOtherByedge"]], "getotherbyedge() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.getOtherByedge"]], "get_graph_dataset() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.get_Graph_Dataset"]], "get_node_dataset() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.get_Node_Dataset"]], "get_agg_feauture() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_agg_feauture"]], "get_anchor() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_anchor"]], "get_best_egde() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.get_best_egde"]], "get_best_node() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.get_best_node"]], "get_best_threshold() (socialed.detector.hypersed.preprocessor method)": [[2, "SocialED.detector.hypersed.Preprocessor.get_best_threshold"]], "get_center() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.get_center"]], "get_closed_set_messages_embeddings() (socialed.detector.adpsemevent.preprocessor method)": [[2, "SocialED.detector.adpsemevent.Preprocessor.get_closed_set_messages_embeddings"]], "get_closed_set_messages_embeddings() (socialed.detector.hisevent.preprocessor method)": [[2, "SocialED.detector.hisevent.Preprocessor.get_closed_set_messages_embeddings"]], "get_closed_set_test_df() (socialed.detector.adpsemevent.preprocessor method)": [[2, "SocialED.detector.adpsemevent.Preprocessor.get_closed_set_test_df"]], "get_closed_set_test_df() (socialed.detector.hisevent.preprocessor method)": [[2, "SocialED.detector.hisevent.Preprocessor.get_closed_set_test_df"]], "get_cluster_labels() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_cluster_labels"]], "get_colors() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_colors"]], "get_cut() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.get_cut"]], "get_cut() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.get_cut"]], "get_cut() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.get_cut"]], "get_data() (socialed.detector.hypersed.twitterdataset method)": [[2, "SocialED.detector.hypersed.TwitterDataSet.get_data"]], "get_data() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.get_data"]], "get_data_buffer() (socialed.detector.hcrc.basebuffer method)": [[2, "SocialED.detector.hcrc.BaseBuffer.get_data_buffer"]], "get_dgl_data() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.get_dgl_data"]], "get_dim() (socialed.detector.hcrc.cnnencoder method)": [[2, "SocialED.detector.hcrc.CNNEncoder.get_dim"]], "get_dim() (socialed.detector.hcrc.mlpencoder method)": [[2, "SocialED.detector.hcrc.MLPEncoder.get_dim"]], "get_edge_index() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.get_edge_index"]], "get_embedding() (socialed.detector.hcrc.graph_modeltrainer method)": [[2, "SocialED.detector.hcrc.Graph_ModelTrainer.get_embedding"]], "get_embedding() (socialed.detector.hcrc.node_modeltrainer method)": [[2, "SocialED.detector.hcrc.Node_ModelTrainer.get_embedding"]], "get_euc_anchors() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_euc_anchors"]], "get_euc_anchors_alladj() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_euc_anchors_alladj"]], "get_euc_anchors_alladj_as() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_euc_anchors_alladj_as"]], "get_global_edges() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.get_global_edges"]], "get_global_edges() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.get_global_edges"]], "get_global_edges() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_global_edges"]], "get_graph_edges() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.get_graph_edges"]], "get_graph_edges() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.get_graph_edges"]], "get_graph_edges() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_graph_edges"]], "get_info_cluster() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.get_info_cluster"]], "get_knn_edges() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.get_knn_edges"]], "get_knn_edges() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.get_knn_edges"]], "get_knn_edges() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.get_knn_edges"]], "get_len() (socialed.detector.hcrc.basebuffer method)": [[2, "SocialED.detector.hcrc.BaseBuffer.get_len"]], "get_loss() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.get_loss"]], "get_model() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.get_model"]], "get_model_state() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.get_model_state"]], "get_new_predicts() (socialed.detector.hypersed.cluster_metrics method)": [[2, "SocialED.detector.hypersed.cluster_metrics.get_new_predicts"]], "get_nlp() (socialed.detector.uclsed.preprocessor method)": [[2, "SocialED.detector.uclsed.Preprocessor.get_nlp"]], "get_open_set_messages_embeddings() (socialed.detector.adpsemevent.preprocessor method)": [[2, "SocialED.detector.adpsemevent.Preprocessor.get_open_set_messages_embeddings"]], "get_open_set_messages_embeddings() (socialed.detector.hisevent.preprocessor method)": [[2, "SocialED.detector.hisevent.Preprocessor.get_open_set_messages_embeddings"]], "get_reward() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.get_reward"]], "get_sbert_embeddings() (socialed.detector.sbert.sbert method)": [[2, "SocialED.detector.sbert.SBERT.get_sbert_embeddings"]], "get_set_messages_embeddings() (socialed.detector.hypersed.preprocessor method)": [[2, "SocialED.detector.hypersed.Preprocessor.get_set_messages_embeddings"]], "get_set_test_df() (socialed.detector.hypersed.preprocessor method)": [[2, "SocialED.detector.hypersed.Preprocessor.get_set_test_df"]], "get_stable_point() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.get_stable_point"]], "get_stable_point() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.get_stable_point"]], "get_state() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.get_state"]], "get_subgraphs() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.get_subgraphs"]], "get_subgraphs_edges() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.get_subgraphs_edges"]], "get_subgraphs_edges() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.get_subgraphs_edges"]], "get_task() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.get_task"]], "get_time_relation() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.get_time_relation"]], "get_triplets() (socialed.detector.bilstm.functionnegativetripletselector method)": [[2, "SocialED.detector.bilstm.FunctionNegativeTripletSelector.get_triplets"]], "get_triplets() (socialed.detector.bilstm.tripletselector method)": [[2, "SocialED.detector.bilstm.TripletSelector.get_triplets"]], "get_triplets() (socialed.detector.clkd.functionnegativetripletselector method)": [[2, "SocialED.detector.clkd.FunctionNegativeTripletSelector.get_triplets"]], "get_triplets() (socialed.detector.clkd.tripletselector method)": [[2, "SocialED.detector.clkd.TripletSelector.get_triplets"]], "get_triplets() (socialed.detector.finevent.functionnegativetripletselector method)": [[2, "SocialED.detector.finevent.FunctionNegativeTripletSelector.get_triplets"]], "get_triplets() (socialed.detector.finevent.tripletselector method)": [[2, "SocialED.detector.finevent.TripletSelector.get_triplets"]], "get_triplets() (socialed.detector.kpgnn.functionnegativetripletselector method)": [[2, "SocialED.detector.kpgnn.FunctionNegativeTripletSelector.get_triplets"]], "get_triplets() (socialed.detector.kpgnn.tripletselector method)": [[2, "SocialED.detector.kpgnn.TripletSelector.get_triplets"]], "get_triplets() (socialed.detector.qsgnn.functionnegativetripletselector method)": [[2, "SocialED.detector.qsgnn.FunctionNegativeTripletSelector.get_triplets"]], "get_triplets() (socialed.detector.qsgnn.tripletselector method)": [[2, "SocialED.detector.qsgnn.TripletSelector.get_triplets"]], "get_vol() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.get_vol"]], "get_vol() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.get_vol"]], "get_vol() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.get_vol"]], "get_volume() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.get_volume"]], "get_volume() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.get_volume"]], "get_volume() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.get_volume"]], "get_word2id_emb() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.get_word2id_emb"]], "getdata() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.getdata"]], "getdata() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.getdata"]], "getlinear_transform_features() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.getlinear_transform_features"]], "graph_statistics() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.graph_statistics"]], "graph_statistics() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.graph_statistics"]], "graph_statistics() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.graph_statistics"]], "graph_statistics() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.graph_statistics"]], "graph_top_k() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.graph_top_K"]], "gumbel_sigmoid() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.gumbel_sigmoid"]], "gumbel_softmax() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.gumbel_softmax"]], "gumbel_softmax_sample() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.gumbel_softmax_sample"]], "hardest_negative() (in module socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.hardest_negative"]], "hardest_negative() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.hardest_negative"]], "hardest_negative() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.hardest_negative"]], "hardest_negative() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.hardest_negative"]], "hashtags (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.hashtags"]], "hier_2d_se_mini() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.hier_2D_SE_mini"]], "hier_2d_se_mini() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.hier_2D_SE_mini"]], "hyperbolic_distance() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.hyperbolic_distance"]], "hyperbolic_distance1() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.hyperbolic_distance1"]], "index2adjacency() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.index2adjacency"]], "infer() (socialed.detector.kpgnn.kpgnn_model method)": [[2, "SocialED.detector.kpgnn.KPGNN_model.infer"]], "infer() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.infer"]], "inference() (socialed.detector.finevent.finevent_model method)": [[2, "SocialED.detector.finevent.FinEvent_model.inference"]], "init_division() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.init_division"]], "init_division() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.init_division"]], "init_division() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.init_division"]], "init_hidden() (socialed.detector.bilstm.lstm method)": [[2, "SocialED.detector.bilstm.LSTM.init_hidden"]], "init_incr_data() (socialed.detector.hypersed.twitterdataset method)": [[2, "SocialED.detector.hypersed.TwitterDataSet.init_incr_data"]], "init_weights() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.init_weights"]], "initial_maintain() (socialed.detector.finevent.finevent_model method)": [[2, "SocialED.detector.finevent.FinEvent_model.initial_maintain"]], "initial_maintain() (socialed.detector.kpgnn.kpgnn_model method)": [[2, "SocialED.detector.kpgnn.KPGNN_model.initial_maintain"]], "initial_maintain() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.initial_maintain"]], "initial_train() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.initial_train"]], "initialize() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.initialize"]], "intersection() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.intersection"]], "intersection() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.intersection"]], "intersection() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.intersection"]], "intersection() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.intersection"]], "kl_divergence() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.kl_divergence"]], "kl_divergence() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.kl_divergence"]], "kl_pred_divergence() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.kl_pred_divergence"]], "labels (socialed.detector.hypersed.datapartition attribute)": [[2, "SocialED.detector.hypersed.DataPartition.labels"]], "labels (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.labels"]], "learn() (socialed.detector.hcrc.dqn method)": [[2, "SocialED.detector.hcrc.DQN.learn"]], "learn() (socialed.detector.hcrc.ppo method)": [[2, "SocialED.detector.hcrc.PPO.learn"]], "load_adj_matrix() (socialed.detector.clkd.socialdataset method)": [[2, "SocialED.detector.clkd.SocialDataset.load_adj_matrix"]], "load_adj_matrix() (socialed.detector.kpgnn.socialdataset method)": [[2, "SocialED.detector.kpgnn.SocialDataset.load_adj_matrix"]], "load_adj_matrix() (socialed.detector.qsgnn.socialdataset method)": [[2, "SocialED.detector.qsgnn.SocialDataset.load_adj_matrix"]], "load_ckpt() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.load_ckpt"]], "load_data() (socialed.detector.uclsed.preprocessor method)": [[2, "SocialED.detector.uclsed.Preprocessor.load_data"]], "load_data_blocks() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.load_data_blocks"]], "load_embeddings() (socialed.detector.bilstm.bilstm method)": [[2, "SocialED.detector.bilstm.BiLSTM.load_embeddings"]], "load_glove_vectors() (socialed.detector.glove.glove method)": [[2, "SocialED.detector.glove.GloVe.load_glove_vectors"]], "load_model() (socialed.detector.glove.glove method)": [[2, "SocialED.detector.glove.GloVe.load_model"]], "load_model() (socialed.detector.lda.lda method)": [[2, "SocialED.detector.lda.LDA.load_model"]], "load_model() (socialed.detector.word2vec.word2vec method)": [[2, "SocialED.detector.word2vec.WORD2VEC.load_model"]], "loglikelihood_loss() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.loglikelihood_loss"]], "loglikelihood_loss() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.loglikelihood_loss"]], "loss() (socialed.detector.hypersed.hypergraphautoencoder method)": [[2, "SocialED.detector.hypersed.HyperGraphAutoEncoder.loss"]], "loss() (socialed.detector.hypersed.hyperse method)": [[2, "SocialED.detector.hypersed.HyperSE.loss"]], "make_batch() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.make_batch"]], "make_onehot() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.make_onehot"]], "make_ref_samples() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.make_ref_samples"]], "make_symmetric() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.make_symmetric"]], "make_train_samples() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.make_train_samples"]], "make_transition() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.make_transition"]], "map_communities() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.map_communities"]], "map_dicts() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.map_dicts"]], "map_tweets() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.map_tweets"]], "mask_edges() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.mask_edges"]], "merge_nodes_once() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.merge_nodes_once"]], "message_func() (socialed.detector.clkd.gatlayer method)": [[2, "SocialED.detector.clkd.GATLayer.message_func"]], "message_func() (socialed.detector.kpgnn.gatlayer method)": [[2, "SocialED.detector.kpgnn.GATLayer.message_func"]], "message_func() (socialed.detector.qsgnn.gatlayer method)": [[2, "SocialED.detector.qsgnn.GATLayer.message_func"]], "message_func() (socialed.detector.uclsed.tem_agg_layer method)": [[2, "SocialED.detector.uclsed.Tem_Agg_Layer.message_func"]], "mobius_add() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.mobius_add"]], "mobius_mul() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.mobius_mul"]], "module": [[2, "module-SocialED.detector.adpsemevent"], [2, "module-SocialED.detector.bilstm"], [2, "module-SocialED.detector.clkd"], [2, "module-SocialED.detector.eventx"], [2, "module-SocialED.detector.finevent"], [2, "module-SocialED.detector.glove"], [2, "module-SocialED.detector.hcrc"], [2, "module-SocialED.detector.hisevent"], [2, "module-SocialED.detector.hypersed"], [2, "module-SocialED.detector.kpgnn"], [2, "module-SocialED.detector.lda"], [2, "module-SocialED.detector.qsgnn"], [2, "module-SocialED.detector.rplmsed"], [2, "module-SocialED.detector.sbert"], [2, "module-SocialED.detector.uclsed"], [2, "module-SocialED.detector.wmd"], [2, "module-SocialED.detector.word2vec"]], "mse_loss() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.mse_loss"]], "mse_loss() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.mse_loss"]], "multi_forward_agg() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.multi_forward_agg"]], "mutual_extract_embeddings() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.mutual_extract_embeddings"]], "mutual_infer() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.mutual_infer"]], "mutual_train() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.mutual_train"]], "name() (socialed.detector.clkd.accumulatedaccuracymetric method)": [[2, "SocialED.detector.clkd.AccumulatedAccuracyMetric.name"]], "name() (socialed.detector.clkd.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.clkd.AverageNonzeroTripletsMetric.name"]], "name() (socialed.detector.clkd.metric method)": [[2, "SocialED.detector.clkd.Metric.name"]], "name() (socialed.detector.finevent.accumulatedaccuracymetric method)": [[2, "SocialED.detector.finevent.AccumulatedAccuracyMetric.name"]], "name() (socialed.detector.finevent.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.finevent.AverageNonzeroTripletsMetric.name"]], "name() (socialed.detector.finevent.metric method)": [[2, "SocialED.detector.finevent.Metric.name"]], "name() (socialed.detector.kpgnn.accumulatedaccuracymetric method)": [[2, "SocialED.detector.kpgnn.AccumulatedAccuracyMetric.name"]], "name() (socialed.detector.kpgnn.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.kpgnn.AverageNonzeroTripletsMetric.name"]], "name() (socialed.detector.kpgnn.metric method)": [[2, "SocialED.detector.kpgnn.Metric.name"]], "name() (socialed.detector.qsgnn.accumulatedaccuracymetric method)": [[2, "SocialED.detector.qsgnn.AccumulatedAccuracyMetric.name"]], "name() (socialed.detector.qsgnn.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.qsgnn.AverageNonzeroTripletsMetric.name"]], "name() (socialed.detector.qsgnn.metric method)": [[2, "SocialED.detector.qsgnn.Metric.name"]], "neg_edge_index (socialed.detector.hypersed.dsidata attribute)": [[2, "SocialED.detector.hypersed.DSIData.neg_edge_index"]], "neg_edge_index (socialed.detector.hypersed.edgeindextypes attribute)": [[2, "SocialED.detector.hypersed.EdgeIndexTypes.neg_edge_index"]], "networkx_to_dgl_graph() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.networkx_to_dgl_graph"]], "networkx_to_dgl_graph() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.networkx_to_dgl_graph"]], "networkx_to_dgl_graph() (socialed.detector.kpgnn.preprocessor method)": [[2, "SocialED.detector.kpgnn.Preprocessor.networkx_to_dgl_graph"]], "networkx_to_dgl_graph() (socialed.detector.qsgnn.preprocessor method)": [[2, "SocialED.detector.qsgnn.Preprocessor.networkx_to_dgl_graph"]], "nonlinear_transform_features() (socialed.detector.clkd.preprocessor method)": [[2, "SocialED.detector.clkd.Preprocessor.nonlinear_transform_features"]], "normalize() (socialed.detector.hypersed.hypergraphautoencoder method)": [[2, "SocialED.detector.hypersed.HyperGraphAutoEncoder.normalize"]], "normalize() (socialed.detector.hypersed.lsenet method)": [[2, "SocialED.detector.hypersed.LSENet.normalize"]], "normalize_adj() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.normalize_adj"]], "num_anchors (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.num_anchors"]], "num_classes (socialed.detector.hypersed.datapartition attribute)": [[2, "SocialED.detector.hypersed.DataPartition.num_classes"]], "num_classes (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.num_classes"]], "num_features (socialed.detector.hypersed.datapartition attribute)": [[2, "SocialED.detector.hypersed.DataPartition.num_features"]], "num_features (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.num_features"]], "num_nodes (socialed.detector.hypersed.datapartition attribute)": [[2, "SocialED.detector.hypersed.DataPartition.num_nodes"]], "num_nodes (socialed.detector.hypersed.singleblockdata attribute)": [[2, "SocialED.detector.hypersed.SingleBlockData.num_nodes"]], "offline_train() (socialed.detector.hypersed.trainer method)": [[2, "SocialED.detector.hypersed.Trainer.offline_train"]], "pad_data() (socialed.detector.bilstm.vectorizedata method)": [[2, "SocialED.detector.bilstm.VectorizeData.pad_data"]], "pad_seq() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.pad_seq"]], "pairwise_sample() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.pairwise_sample"]], "path (socialed.detector.hypersed.dataset attribute)": [[2, "SocialED.detector.hypersed.Dataset.path"]], "pdist() (in module socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.pdist"]], "pdist() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.pdist"]], "pdist() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.pdist"]], "pdist() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.pdist"]], "pdist() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.pdist"]], "plot_geodesic() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.plot_geodesic"]], "plot_leaves() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.plot_leaves"]], "plot_nx_graph() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.plot_nx_graph"]], "pre_node_dist() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.pre_node_dist"]], "pre_process() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.pre_process"]], "predict() (socialed.detector.hypersed.poincarekmeans method)": [[2, "SocialED.detector.hypersed.PoincareKMeans.predict"]], "preprocess() (socialed.detector.adpsemevent.adpsemevent method)": [[2, "SocialED.detector.adpsemevent.ADPSEMEvent.preprocess"]], "preprocess() (socialed.detector.adpsemevent.preprocessor method)": [[2, "SocialED.detector.adpsemevent.Preprocessor.preprocess"]], "preprocess() (socialed.detector.bilstm.bilstm method)": [[2, "SocialED.detector.bilstm.BiLSTM.preprocess"]], "preprocess() (socialed.detector.clkd.clkd method)": [[2, "SocialED.detector.clkd.CLKD.preprocess"]], "preprocess() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.preprocess"]], "preprocess() (socialed.detector.finevent.finevent method)": [[2, "SocialED.detector.finevent.FinEvent.preprocess"]], "preprocess() (socialed.detector.glove.glove method)": [[2, "SocialED.detector.glove.GloVe.preprocess"]], "preprocess() (socialed.detector.hisevent.hisevent method)": [[2, "SocialED.detector.hisevent.HISEvent.preprocess"]], "preprocess() (socialed.detector.hisevent.preprocessor method)": [[2, "SocialED.detector.hisevent.Preprocessor.preprocess"]], "preprocess() (socialed.detector.hypersed.hypersed method)": [[2, "SocialED.detector.hypersed.HyperSED.preprocess"]], "preprocess() (socialed.detector.hypersed.preprocessor method)": [[2, "SocialED.detector.hypersed.Preprocessor.preprocess"]], "preprocess() (socialed.detector.kpgnn.kpgnn method)": [[2, "SocialED.detector.kpgnn.KPGNN.preprocess"]], "preprocess() (socialed.detector.lda.lda method)": [[2, "SocialED.detector.lda.LDA.preprocess"]], "preprocess() (socialed.detector.qsgnn.qsgnn method)": [[2, "SocialED.detector.qsgnn.QSGNN.preprocess"]], "preprocess() (socialed.detector.rplmsed.rplmsed method)": [[2, "SocialED.detector.rplmsed.RPLMSED.preprocess"]], "preprocess() (socialed.detector.sbert.sbert method)": [[2, "SocialED.detector.sbert.SBERT.preprocess"]], "preprocess() (socialed.detector.uclsed.uclsed method)": [[2, "SocialED.detector.uclsed.UCLSED.preprocess"]], "preprocess() (socialed.detector.wmd.wmd method)": [[2, "SocialED.detector.wmd.WMD.preprocess"]], "preprocess() (socialed.detector.word2vec.word2vec method)": [[2, "SocialED.detector.word2vec.WORD2VEC.preprocess"]], "preprocess_all() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.preprocess_all"]], "preprocess_french_sentence() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.preprocess_french_sentence"]], "preprocess_french_sentence() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.preprocess_french_sentence"]], "preprocess_french_sentence() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.preprocess_french_sentence"]], "preprocess_sentence() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.preprocess_sentence"]], "preprocess_sentence() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.preprocess_sentence"]], "preprocess_sentence() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.preprocess_sentence"]], "pretrain (socialed.detector.hypersed.dsidata attribute)": [[2, "SocialED.detector.hypersed.DSIData.pretrain"]], "printconfig() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.printConfig"]], "print_graph() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.print_graph"]], "print_graph() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.print_graph"]], "print_graph() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.print_graph"]], "print_scores() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.print_scores"]], "print_scores() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.print_scores"]], "print_table() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.print_table"]], "process_block() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.process_block"]], "process_document() (in module socialed.detector.wmd)": [[2, "SocialED.detector.wmd.process_document"]], "random_cluster() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.random_cluster"]], "random_hard_negative() (in module socialed.detector.bilstm)": [[2, "SocialED.detector.bilstm.random_hard_negative"]], "random_hard_negative() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.random_hard_negative"]], "random_hard_negative() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.random_hard_negative"]], "random_hard_negative() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.random_hard_negative"]], "random_hard_negative() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.random_hard_negative"]], "reduce_func() (socialed.detector.clkd.gatlayer method)": [[2, "SocialED.detector.clkd.GATLayer.reduce_func"]], "reduce_func() (socialed.detector.kpgnn.gatlayer method)": [[2, "SocialED.detector.kpgnn.GATLayer.reduce_func"]], "reduce_func() (socialed.detector.qsgnn.gatlayer method)": [[2, "SocialED.detector.qsgnn.GATLayer.reduce_func"]], "reduce_func() (socialed.detector.uclsed.tem_agg_layer method)": [[2, "SocialED.detector.uclsed.Tem_Agg_Layer.reduce_func"]], "reload_plm() (socialed.detector.rplmsed.pairpfxtuningencoder method)": [[2, "SocialED.detector.rplmsed.PairPfxTuningEncoder.reload_plm"]], "relu_evidence() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.relu_evidence"]], "relu_evidence() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.relu_evidence"]], "removeemoticons() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.removeEmoticons"]], "removeemoticons() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.removeEmoticons"]], "removeemoticons() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.removeEmoticons"]], "removenewlines() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.removeNewLines"]], "removenewlines() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.removeNewLines"]], "removenewlines() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.removeNewLines"]], "removeunicode() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.removeUnicode"]], "removeunicode() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.removeUnicode"]], "removeunicode() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.removeUnicode"]], "remove_obsolete_nodes() (socialed.detector.clkd.socialdataset method)": [[2, "SocialED.detector.clkd.SocialDataset.remove_obsolete_nodes"]], "remove_obsolete_nodes() (socialed.detector.kpgnn.socialdataset method)": [[2, "SocialED.detector.kpgnn.SocialDataset.remove_obsolete_nodes"]], "remove_obsolete_nodes() (socialed.detector.qsgnn.socialdataset method)": [[2, "SocialED.detector.qsgnn.SocialDataset.remove_obsolete_nodes"]], "replaceatuser() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.replaceAtUser"]], "replaceatuser() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.replaceAtUser"]], "replaceatuser() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.replaceAtUser"]], "replacemultiexclamationmark() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.replaceMultiExclamationMark"]], "replacemultiexclamationmark() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.replaceMultiExclamationMark"]], "replacemultiexclamationmark() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.replaceMultiExclamationMark"]], "replacemultiquestionmark() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.replaceMultiQuestionMark"]], "replacemultiquestionmark() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.replaceMultiQuestionMark"]], "replacemultiquestionmark() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.replaceMultiQuestionMark"]], "replaceurl() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.replaceURL"]], "replaceurl() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.replaceURL"]], "replaceurl() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.replaceURL"]], "reset() (socialed.detector.clkd.accumulatedaccuracymetric method)": [[2, "SocialED.detector.clkd.AccumulatedAccuracyMetric.reset"]], "reset() (socialed.detector.clkd.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.clkd.AverageNonzeroTripletsMetric.reset"]], "reset() (socialed.detector.clkd.metric method)": [[2, "SocialED.detector.clkd.Metric.reset"]], "reset() (socialed.detector.finevent.accumulatedaccuracymetric method)": [[2, "SocialED.detector.finevent.AccumulatedAccuracyMetric.reset"]], "reset() (socialed.detector.finevent.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.finevent.AverageNonzeroTripletsMetric.reset"]], "reset() (socialed.detector.finevent.metric method)": [[2, "SocialED.detector.finevent.Metric.reset"]], "reset() (socialed.detector.kpgnn.accumulatedaccuracymetric method)": [[2, "SocialED.detector.kpgnn.AccumulatedAccuracyMetric.reset"]], "reset() (socialed.detector.kpgnn.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.kpgnn.AverageNonzeroTripletsMetric.reset"]], "reset() (socialed.detector.kpgnn.metric method)": [[2, "SocialED.detector.kpgnn.Metric.reset"]], "reset() (socialed.detector.qsgnn.accumulatedaccuracymetric method)": [[2, "SocialED.detector.qsgnn.AccumulatedAccuracyMetric.reset"]], "reset() (socialed.detector.qsgnn.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.qsgnn.AverageNonzeroTripletsMetric.reset"]], "reset() (socialed.detector.qsgnn.metric method)": [[2, "SocialED.detector.qsgnn.Metric.reset"]], "reset_moving_average() (socialed.detector.hcrc.graphlevel method)": [[2, "SocialED.detector.hcrc.GraphLevel.reset_moving_average"]], "reset_moving_average() (socialed.detector.hcrc.nodelevel method)": [[2, "SocialED.detector.hcrc.NodeLevel.reset_moving_average"]], "reset_parameters() (socialed.detector.clkd.gatlayer method)": [[2, "SocialED.detector.clkd.GATLayer.reset_parameters"]], "reset_parameters() (socialed.detector.hypersed.lorentzlinear method)": [[2, "SocialED.detector.hypersed.LorentzLinear.reset_parameters"]], "reset_parameters() (socialed.detector.kpgnn.gatlayer method)": [[2, "SocialED.detector.kpgnn.GATLayer.reset_parameters"]], "reset_parameters() (socialed.detector.qsgnn.gatlayer method)": [[2, "SocialED.detector.qsgnn.GATLayer.reset_parameters"]], "reset_parameters() (socialed.detector.uclsed.tem_agg_layer method)": [[2, "SocialED.detector.uclsed.Tem_Agg_Layer.reset_parameters"]], "run_cluster() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.run_cluster"]], "run_cluster_init() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.run_cluster_init"]], "run_cluster_sim() (socialed.detector.hcrc.singlepass method)": [[2, "SocialED.detector.hcrc.SinglePass.run_cluster_sim"]], "run_dbscan() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.run_dbscan"]], "run_hdbscan() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.run_hdbscan"]], "run_hdbscan() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.run_hdbscan"]], "run_hier_2d_se_mini_closed_set() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.run_hier_2D_SE_mini_closed_set"]], "run_hier_2d_se_mini_data() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.run_hier_2D_SE_mini_data"]], "run_hier_2d_se_mini_open_set() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.run_hier_2D_SE_mini_open_set"]], "run_kmeans() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.run_kmeans"]], "run_kmeans() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.run_kmeans"]], "run_kmeans() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.run_kmeans"]], "run_kmeans() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.run_kmeans"]], "run_kmeans() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.run_kmeans"]], "run_processes() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.run_processes"]], "run_train() (socialed.detector.bilstm.bilstm method)": [[2, "SocialED.detector.bilstm.BiLSTM.run_train"]], "sample() (socialed.detector.finevent.mysampler method)": [[2, "SocialED.detector.finevent.MySampler.sample"]], "sample() (socialed.detector.hcrc.basebuffer method)": [[2, "SocialED.detector.hcrc.BaseBuffer.sample"]], "sample_gumbel() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.sample_gumbel"]], "save_data() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.save_data"]], "save_edge_index() (socialed.detector.finevent.preprocessor method)": [[2, "SocialED.detector.finevent.Preprocessor.save_edge_index"]], "save_embeddings() (in module socialed.detector.clkd)": [[2, "SocialED.detector.clkd.save_embeddings"]], "save_embeddings() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.save_embeddings"]], "save_embeddings() (in module socialed.detector.kpgnn)": [[2, "SocialED.detector.kpgnn.save_embeddings"]], "save_model() (socialed.detector.hcrc.dqn method)": [[2, "SocialED.detector.hcrc.DQN.save_model"]], "save_model() (socialed.detector.hcrc.ppo method)": [[2, "SocialED.detector.hcrc.PPO.save_model"]], "save_multi_relational_graph() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.save_multi_relational_graph"]], "search_stable_points() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.search_stable_points"]], "search_stable_points() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.search_stable_points"]], "search_threshold() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.search_threshold"]], "select_action() (socialed.detector.hcrc.dqn method)": [[2, "SocialED.detector.hcrc.DQN.select_action"]], "select_action() (socialed.detector.hcrc.ppo method)": [[2, "SocialED.detector.hcrc.PPO.select_action"]], "select_activation() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.select_activation"]], "semi_cluster() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.semi_cluster"]], "semi_loss() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.semi_loss"]], "set_requires_grad() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.set_requires_grad"]], "show_division() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.show_division"]], "show_division() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.show_division"]], "show_division() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.show_division"]], "show_struc_data() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.show_struc_data"]], "show_struc_data() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.show_struc_data"]], "show_struc_data() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.show_struc_data"]], "show_struc_data_2d() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.show_struc_data_2d"]], "show_struc_data_2d() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.show_struc_data_2d"]], "show_struc_data_2d() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.show_struc_data_2d"]], "sim() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.sim"]], "simnn (class in socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.simNN"]], "softplus_evidence() (in module socialed.detector.qsgnn)": [[2, "SocialED.detector.qsgnn.softplus_evidence"]], "softplus_evidence() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.softplus_evidence"]], "sparse_to_tuple() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.sparse_to_tuple"]], "sparse_trans() (in module socialed.detector.finevent)": [[2, "SocialED.detector.finevent.sparse_trans"]], "split() (socialed.detector.bilstm.bilstm method)": [[2, "SocialED.detector.bilstm.BiLSTM.split"]], "split() (socialed.detector.eventx.eventx method)": [[2, "SocialED.detector.eventx.EventX.split"]], "split_and_save_masks() (socialed.detector.adpsemevent.preprocessor method)": [[2, "SocialED.detector.adpsemevent.Preprocessor.split_and_save_masks"]], "split_and_save_masks() (socialed.detector.hisevent.preprocessor method)": [[2, "SocialED.detector.hisevent.Preprocessor.split_and_save_masks"]], "split_and_save_masks() (socialed.detector.hypersed.preprocessor method)": [[2, "SocialED.detector.hypersed.Preprocessor.split_and_save_masks"]], "split_data() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.split_data"]], "split_into_blocks() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.split_into_blocks"]], "split_open_set() (socialed.detector.adpsemevent.preprocessor method)": [[2, "SocialED.detector.adpsemevent.Preprocessor.split_open_set"]], "split_open_set() (socialed.detector.hisevent.preprocessor method)": [[2, "SocialED.detector.hisevent.Preprocessor.split_open_set"]], "split_train_test_validation() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.split_train_test_validation"]], "start_run() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.start_run"]], "state_dict() (socialed.detector.rplmsed.ckptwrapper method)": [[2, "SocialED.detector.rplmsed.CkptWrapper.state_dict"]], "str2list() (socialed.detector.uclsed.preprocessor method)": [[2, "SocialED.detector.uclsed.Preprocessor.str2list"]], "tanh() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.tanh"]], "tensor_to_sparse() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.tensor_to_sparse"]], "test() (socialed.detector.hypersed.trainer method)": [[2, "SocialED.detector.hypersed.Trainer.test"]], "test_on_block() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.test_on_block"]], "test_vanilla_2d_se_mini() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.test_vanilla_2D_SE_mini"]], "test_vanilla_2d_se_mini() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.test_vanilla_2D_SE_mini"]], "text (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.text"]], "text_to_glove_vector() (socialed.detector.glove.glove method)": [[2, "SocialED.detector.glove.GloVe.text_to_glove_vector"]], "to_lorentz() (socialed.detector.hypersed.poincare method)": [[2, "SocialED.detector.hypersed.Poincare.to_lorentz"]], "to_networkx_tree() (in module socialed.detector.hypersed)": [[2, "SocialED.detector.hypersed.to_networkx_tree"]], "to_poincare() (socialed.detector.hypersed.lorentz method)": [[2, "SocialED.detector.hypersed.Lorentz.to_poincare"]], "to_sparse_matrix() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.to_sparse_matrix"]], "train() (socialed.detector.bilstm.bilstm method)": [[2, "SocialED.detector.bilstm.BiLSTM.train"]], "train() (socialed.detector.hcrc.graph_modeltrainer method)": [[2, "SocialED.detector.hcrc.Graph_ModelTrainer.train"]], "train() (socialed.detector.hcrc.node_modeltrainer method)": [[2, "SocialED.detector.hcrc.Node_ModelTrainer.train"]], "train_model() (in module socialed.detector.uclsed)": [[2, "SocialED.detector.uclsed.train_model"]], "train_on_block() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.train_on_block"]], "transform() (socialed.detector.hypersed.poincarekmeans method)": [[2, "SocialED.detector.hypersed.PoincareKMeans.transform"]], "tweet_id (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.tweet_id"]], "tweet_to_event() (socialed.detector.rplmsed.preprocessor method)": [[2, "SocialED.detector.rplmsed.Preprocessor.tweet_to_event"]], "unique() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.unique"]], "update_1dse() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.update_1dSE"]], "update_1dse() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.update_1dSE"]], "update_1dse() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.update_1dSE"]], "update_average() (socialed.detector.hcrc.ema method)": [[2, "SocialED.detector.hcrc.EMA.update_average"]], "update_division_minse() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.update_division_MinSE"]], "update_division_minse() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.update_division_MinSE"]], "update_division_minse() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.update_division_MinSE"]], "update_moving_average() (socialed.detector.hcrc.graphlevel method)": [[2, "SocialED.detector.hcrc.GraphLevel.update_moving_average"]], "update_moving_average() (socialed.detector.hcrc.nodelevel method)": [[2, "SocialED.detector.hcrc.NodeLevel.update_moving_average"]], "update_moving_average() (in module socialed.detector.hcrc)": [[2, "SocialED.detector.hcrc.update_moving_average"]], "update_network() (socialed.detector.hcrc.dqn method)": [[2, "SocialED.detector.hcrc.DQN.update_network"]], "update_struc_data() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.update_struc_data"]], "update_struc_data() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.update_struc_data"]], "update_struc_data() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.update_struc_data"]], "update_struc_data_2d() (socialed.detector.adpsemevent.se method)": [[2, "SocialED.detector.adpsemevent.SE.update_struc_data_2d"]], "update_struc_data_2d() (socialed.detector.hisevent.se method)": [[2, "SocialED.detector.hisevent.SE.update_struc_data_2d"]], "update_struc_data_2d() (socialed.detector.hypersed.se method)": [[2, "SocialED.detector.hypersed.SE.update_struc_data_2d"]], "urls (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.urls"]], "user_id (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.user_id"]], "user_mentions (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.user_mentions"]], "userid (socialed.detector.hypersed.views attribute)": [[2, "SocialED.detector.hypersed.Views.userid"]], "value() (socialed.detector.clkd.accumulatedaccuracymetric method)": [[2, "SocialED.detector.clkd.AccumulatedAccuracyMetric.value"]], "value() (socialed.detector.clkd.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.clkd.AverageNonzeroTripletsMetric.value"]], "value() (socialed.detector.clkd.metric method)": [[2, "SocialED.detector.clkd.Metric.value"]], "value() (socialed.detector.finevent.accumulatedaccuracymetric method)": [[2, "SocialED.detector.finevent.AccumulatedAccuracyMetric.value"]], "value() (socialed.detector.finevent.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.finevent.AverageNonzeroTripletsMetric.value"]], "value() (socialed.detector.finevent.metric method)": [[2, "SocialED.detector.finevent.Metric.value"]], "value() (socialed.detector.kpgnn.accumulatedaccuracymetric method)": [[2, "SocialED.detector.kpgnn.AccumulatedAccuracyMetric.value"]], "value() (socialed.detector.kpgnn.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.kpgnn.AverageNonzeroTripletsMetric.value"]], "value() (socialed.detector.kpgnn.metric method)": [[2, "SocialED.detector.kpgnn.Metric.value"]], "value() (socialed.detector.qsgnn.accumulatedaccuracymetric method)": [[2, "SocialED.detector.qsgnn.AccumulatedAccuracyMetric.value"]], "value() (socialed.detector.qsgnn.averagenonzerotripletsmetric method)": [[2, "SocialED.detector.qsgnn.AverageNonzeroTripletsMetric.value"]], "value() (socialed.detector.qsgnn.metric method)": [[2, "SocialED.detector.qsgnn.Metric.value"]], "vanilla_2d_se_mini() (in module socialed.detector.adpsemevent)": [[2, "SocialED.detector.adpsemevent.vanilla_2D_SE_mini"]], "vanilla_2d_se_mini() (in module socialed.detector.hisevent)": [[2, "SocialED.detector.hisevent.vanilla_2D_SE_mini"]], "views (socialed.detector.hypersed.datapartition attribute)": [[2, "SocialED.detector.hypersed.DataPartition.views"]], "weight (socialed.detector.hypersed.dsidata attribute)": [[2, "SocialED.detector.hypersed.DSIData.weight"]], "weight (socialed.detector.hypersed.edgeindextypes attribute)": [[2, "SocialED.detector.hypersed.EdgeIndexTypes.weight"]], "weights_init() (socialed.detector.finevent.discriminator method)": [[2, "SocialED.detector.finevent.Discriminator.weights_init"]], "weights_init() (socialed.detector.kpgnn.discriminator method)": [[2, "SocialED.detector.kpgnn.Discriminator.weights_init"]], "width() (in module socialed.detector.rplmsed)": [[2, "SocialED.detector.rplmsed.width"]], "word (socialed.detector.hypersed.views attribute)": [[2, "SocialED.detector.hypersed.Views.word"]], "words (socialed.detector.rplmsed.dataitem attribute)": [[2, "SocialED.detector.rplmsed.DataItem.words"]]}})